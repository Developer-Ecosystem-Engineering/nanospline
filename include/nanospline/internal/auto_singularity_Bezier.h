/**
 * This code is automatically generated by scripts/singularity.py
 */

#pragma once
#include <cassert>
#include <vector>

#include <nanospline/Exceptions.h>
#include <nanospline/PolynomialRootFinder.h>
#include <nanospline/BezierBase.h>

namespace nanospline {
namespace internal {


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_2_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 2>::find_real_roots_in_interval({
        4*cx0*cx0 - 8*cx0*cx1 + 4*cx1*cx1 + 4*cy0*cy0 - 8*cy0*cy1 + 4*cy1*cy1,
    -8*cx0*cx0 + 24*cx0*cx1 - 8*cx0*cx2 - 16*cx1*cx1 + 8*cx1*cx2 - 8*cy0*cy0 + 24*cy0*cy1 - 8*cy0*cy2 - 16*cy1*cy1 + 8*cy1*cy2,
    4*cx0*cx0 - 16*cx0*cx1 + 8*cx0*cx2 + 16*cx1*cx1 - 16*cx1*cx2 + 4*cx2*cx2 + 4*cy0*cy0 - 16*cy0*cy1 + 8*cy0*cy2 + 16*cy1*cy1 - 16*cy1*cy2 + 4*cy2*cy2
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_3_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 4>::find_real_roots_in_interval({
        9*cx0*cx0 - 18*cx0*cx1 + 9*cx1*cx1 + 9*cy0*cy0 - 18*cy0*cy1 + 9*cy1*cy1,
    -36*cx0*cx0 + 108*cx0*cx1 - 36*cx0*cx2 - 72*cx1*cx1 + 36*cx1*cx2 - 36*cy0*cy0 + 108*cy0*cy1 - 36*cy0*cy2 - 72*cy1*cy1 + 36*cy1*cy2,
    54*cx0*cx0 - 216*cx0*cx1 + 126*cx0*cx2 - 18*cx0*cx3 + 198*cx1*cx1 - 198*cx1*cx2 + 18*cx1*cx3 + 36*cx2*cx2 + 54*cy0*cy0 - 216*cy0*cy1 + 126*cy0*cy2 - 18*cy0*cy3 + 198*cy1*cy1 - 198*cy1*cy2 + 18*cy1*cy3 + 36*cy2*cy2,
    -36*cx0*cx0 + 180*cx0*cx1 - 144*cx0*cx2 + 36*cx0*cx3 - 216*cx1*cx1 + 324*cx1*cx2 - 72*cx1*cx3 - 108*cx2*cx2 + 36*cx2*cx3 - 36*cy0*cy0 + 180*cy0*cy1 - 144*cy0*cy2 + 36*cy0*cy3 - 216*cy1*cy1 + 324*cy1*cy2 - 72*cy1*cy3 - 108*cy2*cy2 + 36*cy2*cy3,
    9*cx0*cx0 - 54*cx0*cx1 + 54*cx0*cx2 - 18*cx0*cx3 + 81*cx1*cx1 - 162*cx1*cx2 + 54*cx1*cx3 + 81*cx2*cx2 - 54*cx2*cx3 + 9*cx3*cx3 + 9*cy0*cy0 - 54*cy0*cy1 + 54*cy0*cy2 - 18*cy0*cy3 + 81*cy1*cy1 - 162*cy1*cy2 + 54*cy1*cy3 + 81*cy2*cy2 - 54*cy2*cy3 + 9*cy3*cy3
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_4_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3, Scalar cx4, Scalar cy4,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 6>::find_real_roots_in_interval({
        16*cx0*cx0 - 32*cx0*cx1 + 16*cx1*cx1 + 16*cy0*cy0 - 32*cy0*cy1 + 16*cy1*cy1,
    -96*cx0*cx0 + 288*cx0*cx1 - 96*cx0*cx2 - 192*cx1*cx1 + 96*cx1*cx2 - 96*cy0*cy0 + 288*cy0*cy1 - 96*cy0*cy2 - 192*cy1*cy1 + 96*cy1*cy2,
    240*cx0*cx0 - 960*cx0*cx1 + 576*cx0*cx2 - 96*cx0*cx3 + 864*cx1*cx1 - 864*cx1*cx2 + 96*cx1*cx3 + 144*cx2*cx2 + 240*cy0*cy0 - 960*cy0*cy1 + 576*cy0*cy2 - 96*cy0*cy3 + 864*cy1*cy1 - 864*cy1*cy2 + 96*cy1*cy3 + 144*cy2*cy2,
    -320*cx0*cx0 + 1600*cx0*cx1 - 1344*cx0*cx2 + 416*cx0*cx3 - 32*cx0*cx4 - 1856*cx1*cx1 + 2784*cx1*cx2 - 704*cx1*cx3 + 32*cx1*cx4 - 864*cx2*cx2 + 288*cx2*cx3 - 320*cy0*cy0 + 1600*cy0*cy1 - 1344*cy0*cy2 + 416*cy0*cy3 - 32*cy0*cy4 - 1856*cy1*cy1 + 2784*cy1*cy2 - 704*cy1*cy3 + 32*cy1*cy4 - 864*cy2*cy2 + 288*cy2*cy3,
    240*cx0*cx0 - 1440*cx0*cx1 + 1536*cx0*cx2 - 672*cx0*cx3 + 96*cx0*cx4 + 2064*cx1*cx1 - 4128*cx1*cx2 + 1632*cx1*cx3 - 192*cx1*cx4 + 1872*cx2*cx2 - 1248*cx2*cx3 + 96*cx2*cx4 + 144*cx3*cx3 + 240*cy0*cy0 - 1440*cy0*cy1 + 1536*cy0*cy2 - 672*cy0*cy3 + 96*cy0*cy4 + 2064*cy1*cy1 - 4128*cy1*cy2 + 1632*cy1*cy3 - 192*cy1*cy4 + 1872*cy2*cy2 - 1248*cy2*cy3 + 96*cy2*cy4 + 144*cy3*cy3,
    -96*cx0*cx0 + 672*cx0*cx1 - 864*cx0*cx2 + 480*cx0*cx3 - 96*cx0*cx4 - 1152*cx1*cx1 + 2880*cx1*cx2 - 1536*cx1*cx3 + 288*cx1*cx4 - 1728*cx2*cx2 + 1728*cx2*cx3 - 288*cx2*cx4 - 384*cx3*cx3 + 96*cx3*cx4 - 96*cy0*cy0 + 672*cy0*cy1 - 864*cy0*cy2 + 480*cy0*cy3 - 96*cy0*cy4 - 1152*cy1*cy1 + 2880*cy1*cy2 - 1536*cy1*cy3 + 288*cy1*cy4 - 1728*cy2*cy2 + 1728*cy2*cy3 - 288*cy2*cy4 - 384*cy3*cy3 + 96*cy3*cy4,
    16*cx0*cx0 - 128*cx0*cx1 + 192*cx0*cx2 - 128*cx0*cx3 + 32*cx0*cx4 + 256*cx1*cx1 - 768*cx1*cx2 + 512*cx1*cx3 - 128*cx1*cx4 + 576*cx2*cx2 - 768*cx2*cx3 + 192*cx2*cx4 + 256*cx3*cx3 - 128*cx3*cx4 + 16*cx4*cx4 + 16*cy0*cy0 - 128*cy0*cy1 + 192*cy0*cy2 - 128*cy0*cy3 + 32*cy0*cy4 + 256*cy1*cy1 - 768*cy1*cy2 + 512*cy1*cy3 - 128*cy1*cy4 + 576*cy2*cy2 - 768*cy2*cy3 + 192*cy2*cy4 + 256*cy3*cy3 - 128*cy3*cy4 + 16*cy4*cy4
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_5_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3, Scalar cx4, Scalar cy4, Scalar cx5, Scalar cy5,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 8>::find_real_roots_in_interval({
        25*cx0*cx0 - 50*cx0*cx1 + 25*cx1*cx1 + 25*cy0*cy0 - 50*cy0*cy1 + 25*cy1*cy1,
    -200*cx0*cx0 + 600*cx0*cx1 - 200*cx0*cx2 - 400*cx1*cx1 + 200*cx1*cx2 - 200*cy0*cy0 + 600*cy0*cy1 - 200*cy0*cy2 - 400*cy1*cy1 + 200*cy1*cy2,
    700*cx0*cx0 - 2800*cx0*cx1 + 1700*cx0*cx2 - 300*cx0*cx3 + 2500*cx1*cx1 - 2500*cx1*cx2 + 300*cx1*cx3 + 400*cx2*cx2 + 700*cy0*cy0 - 2800*cy0*cy1 + 1700*cy0*cy2 - 300*cy0*cy3 + 2500*cy1*cy1 - 2500*cy1*cy2 + 300*cy1*cy3 + 400*cy2*cy2,
    -1400*cx0*cx0 + 7000*cx0*cx1 - 6000*cx0*cx2 + 2000*cx0*cx3 - 200*cx0*cx4 - 8000*cx1*cx1 + 12000*cx1*cx2 - 3200*cx1*cx3 + 200*cx1*cx4 - 3600*cx2*cx2 + 1200*cx2*cx3 - 1400*cy0*cy0 + 7000*cy0*cy1 - 6000*cy0*cy2 + 2000*cy0*cy3 - 200*cy0*cy4 - 8000*cy1*cy1 + 12000*cy1*cy2 - 3200*cy1*cy3 + 200*cy1*cy4 - 3600*cy2*cy2 + 1200*cy2*cy3,
    1750*cx0*cx0 - 10500*cx0*cx1 + 11500*cx0*cx2 - 5500*cx0*cx3 + 1050*cx0*cx4 - 50*cx0*cx5 + 14750*cx1*cx1 - 29500*cx1*cx2 + 12300*cx1*cx3 - 1850*cx1*cx4 + 50*cx1*cx5 + 12900*cx2*cx2 - 8600*cx2*cx3 + 800*cx2*cx4 + 900*cx3*cx3 + 1750*cy0*cy0 - 10500*cy0*cy1 + 11500*cy0*cy2 - 5500*cy0*cy3 + 1050*cy0*cy4 - 50*cy0*cy5 + 14750*cy1*cy1 - 29500*cy1*cy2 + 12300*cy1*cy3 - 1850*cy1*cy4 + 50*cy1*cy5 + 12900*cy2*cy2 - 8600*cy2*cy3 + 800*cy2*cy4 + 900*cy3*cy3,
    -1400*cx0*cx0 + 9800*cx0*cx1 - 13000*cx0*cx2 + 8000*cx0*cx3 - 2200*cx0*cx4 + 200*cx0*cx5 - 16400*cx1*cx1 + 41000*cx1*cx2 - 23200*cx1*cx3 + 5600*cx1*cx4 - 400*cx1*cx5 - 23600*cx2*cx2 + 23600*cx2*cx3 - 4600*cx2*cx4 + 200*cx2*cx5 - 4800*cx3*cx3 + 1200*cx3*cx4 - 1400*cy0*cy0 + 9800*cy0*cy1 - 13000*cy0*cy2 + 8000*cy0*cy3 - 2200*cy0*cy4 + 200*cy0*cy5 - 16400*cy1*cy1 + 41000*cy1*cy2 - 23200*cy1*cy3 + 5600*cy1*cy4 - 400*cy1*cy5 - 23600*cy2*cy2 + 23600*cy2*cy3 - 4600*cy2*cy4 + 200*cy2*cy5 - 4800*cy3*cy3 + 1200*cy3*cy4,
    700*cx0*cx0 - 5600*cx0*cx1 + 8700*cx0*cx2 - 6500*cx0*cx3 + 2300*cx0*cx4 - 300*cx0*cx5 + 10900*cx1*cx1 - 32700*cx1*cx2 + 23300*cx1*cx3 - 7700*cx1*cx4 + 900*cx1*cx5 + 23400*cx2*cx2 - 31200*cx2*cx3 + 9300*cx2*cx4 - 900*cx2*cx5 + 9400*cx3*cx3 - 4700*cx3*cx4 + 300*cx3*cx5 + 400*cx4*cx4 + 700*cy0*cy0 - 5600*cy0*cy1 + 8700*cy0*cy2 - 6500*cy0*cy3 + 2300*cy0*cy4 - 300*cy0*cy5 + 10900*cy1*cy1 - 32700*cy1*cy2 + 23300*cy1*cy3 - 7700*cy1*cy4 + 900*cy1*cy5 + 23400*cy2*cy2 - 31200*cy2*cy3 + 9300*cy2*cy4 - 900*cy2*cy5 + 9400*cy3*cy3 - 4700*cy3*cy4 + 300*cy3*cy5 + 400*cy4*cy4,
    -200*cx0*cx0 + 1800*cx0*cx1 - 3200*cx0*cx2 + 2800*cx0*cx3 - 1200*cx0*cx4 + 200*cx0*cx5 - 4000*cx1*cx1 + 14000*cx1*cx2 - 12000*cx1*cx3 + 5000*cx1*cx4 - 800*cx1*cx5 - 12000*cx2*cx2 + 20000*cx2*cx3 - 8000*cx2*cx4 + 1200*cx2*cx5 - 8000*cx3*cx3 + 6000*cx3*cx4 - 800*cx3*cx5 - 1000*cx4*cx4 + 200*cx4*cx5 - 200*cy0*cy0 + 1800*cy0*cy1 - 3200*cy0*cy2 + 2800*cy0*cy3 - 1200*cy0*cy4 + 200*cy0*cy5 - 4000*cy1*cy1 + 14000*cy1*cy2 - 12000*cy1*cy3 + 5000*cy1*cy4 - 800*cy1*cy5 - 12000*cy2*cy2 + 20000*cy2*cy3 - 8000*cy2*cy4 + 1200*cy2*cy5 - 8000*cy3*cy3 + 6000*cy3*cy4 - 800*cy3*cy5 - 1000*cy4*cy4 + 200*cy4*cy5,
    25*cx0*cx0 - 250*cx0*cx1 + 500*cx0*cx2 - 500*cx0*cx3 + 250*cx0*cx4 - 50*cx0*cx5 + 625*cx1*cx1 - 2500*cx1*cx2 + 2500*cx1*cx3 - 1250*cx1*cx4 + 250*cx1*cx5 + 2500*cx2*cx2 - 5000*cx2*cx3 + 2500*cx2*cx4 - 500*cx2*cx5 + 2500*cx3*cx3 - 2500*cx3*cx4 + 500*cx3*cx5 + 625*cx4*cx4 - 250*cx4*cx5 + 25*cx5*cx5 + 25*cy0*cy0 - 250*cy0*cy1 + 500*cy0*cy2 - 500*cy0*cy3 + 250*cy0*cy4 - 50*cy0*cy5 + 625*cy1*cy1 - 2500*cy1*cy2 + 2500*cy1*cy3 - 1250*cy1*cy4 + 250*cy1*cy5 + 2500*cy2*cy2 - 5000*cy2*cy3 + 2500*cy2*cy4 - 500*cy2*cy5 + 2500*cy3*cy3 - 2500*cy3*cy4 + 500*cy3*cy5 + 625*cy4*cy4 - 250*cy4*cy5 + 25*cy5*cy5
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_6_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3, Scalar cx4, Scalar cy4, Scalar cx5, Scalar cy5, Scalar cx6, Scalar cy6,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 10>::find_real_roots_in_interval({
        36*cx0*cx0 - 72*cx0*cx1 + 36*cx1*cx1 + 36*cy0*cy0 - 72*cy0*cy1 + 36*cy1*cy1,
    -360*cx0*cx0 + 1080*cx0*cx1 - 360*cx0*cx2 - 720*cx1*cx1 + 360*cx1*cx2 - 360*cy0*cy0 + 1080*cy0*cy1 - 360*cy0*cy2 - 720*cy1*cy1 + 360*cy1*cy2,
    1620*cx0*cx0 - 6480*cx0*cx1 + 3960*cx0*cx2 - 720*cx0*cx3 + 5760*cx1*cx1 - 5760*cx1*cx2 + 720*cx1*cx3 + 900*cx2*cx2 + 1620*cy0*cy0 - 6480*cy0*cy1 + 3960*cy0*cy2 - 720*cy0*cy3 + 5760*cy1*cy1 - 5760*cy1*cy2 + 720*cy1*cy3 + 900*cy2*cy2,
    -4320*cx0*cx0 + 21600*cx0*cx1 - 18720*cx0*cx2 + 6480*cx0*cx3 - 720*cx0*cx4 - 24480*cx1*cx1 + 36720*cx1*cx2 - 10080*cx1*cx3 + 720*cx1*cx4 - 10800*cx2*cx2 + 3600*cx2*cx3 - 4320*cy0*cy0 + 21600*cy0*cy1 - 18720*cy0*cy2 + 6480*cy0*cy3 - 720*cy0*cy4 - 24480*cy1*cy1 + 36720*cy1*cy2 - 10080*cy1*cy3 + 720*cy1*cy4 - 10800*cy2*cy2 + 3600*cy2*cy3,
    7560*cx0*cx0 - 45360*cx0*cx1 + 50400*cx0*cx2 - 25200*cx0*cx3 + 5400*cx0*cx4 - 360*cx0*cx5 + 63000*cx1*cx1 - 126000*cx1*cx2 + 54000*cx1*cx3 - 9000*cx1*cx4 + 360*cx1*cx5 + 54000*cx2*cx2 - 36000*cx2*cx3 + 3600*cx2*cx4 + 3600*cx3*cx3 + 7560*cy0*cy0 - 45360*cy0*cy1 + 50400*cy0*cy2 - 25200*cy0*cy3 + 5400*cy0*cy4 - 360*cy0*cy5 + 63000*cy1*cy1 - 126000*cy1*cy2 + 54000*cy1*cy3 - 9000*cy1*cy4 + 360*cy1*cy5 + 54000*cy2*cy2 - 36000*cy2*cy3 + 3600*cy2*cy4 + 3600*cy3*cy3,
    -9072*cx0*cx0 + 63504*cx0*cx1 - 85680*cx0*cx2 + 55440*cx0*cx3 - 17280*cx0*cx4 + 2232*cx0*cx5 - 72*cx0*cx6 - 104832*cx1*cx1 + 262080*cx1*cx2 - 152640*cx1*cx3 + 40680*cx1*cx4 - 4032*cx1*cx5 + 72*cx1*cx6 - 147600*cx2*cx2 + 147600*cx2*cx3 - 30600*cx2*cx4 + 1800*cx2*cx5 - 28800*cx3*cx3 + 7200*cx3*cx4 - 9072*cy0*cy0 + 63504*cy0*cy1 - 85680*cy0*cy2 + 55440*cy0*cy3 - 17280*cy0*cy4 + 2232*cy0*cy5 - 72*cy0*cy6 - 104832*cy1*cy1 + 262080*cy1*cy2 - 152640*cy1*cy3 + 40680*cy1*cy4 - 4032*cy1*cy5 + 72*cy1*cy6 - 147600*cy2*cy2 + 147600*cy2*cy3 - 30600*cy2*cy4 + 1800*cy2*cy5 - 28800*cy3*cy3 + 7200*cy3*cy4,
    7560*cx0*cx0 - 60480*cx0*cx1 + 95760*cx0*cx2 - 75600*cx0*cx3 + 30600*cx0*cx4 - 5760*cx0*cx5 + 360*cx0*cx6 + 115920*cx1*cx1 - 347760*cx1*cx2 + 255600*cx1*cx3 - 93600*cx1*cx4 + 15120*cx1*cx5 - 720*cx1*cx6 + 243000*cx2*cx2 - 324000*cx2*cx3 + 102600*cx2*cx4 - 12960*cx2*cx5 + 360*cx2*cx6 + 93600*cx3*cx3 - 46800*cx3*cx4 + 3600*cx3*cx5 + 3600*cx4*cx4 + 7560*cy0*cy0 - 60480*cy0*cy1 + 95760*cy0*cy2 - 75600*cy0*cy3 + 30600*cy0*cy4 - 5760*cy0*cy5 + 360*cy0*cy6 + 115920*cy1*cy1 - 347760*cy1*cy2 + 255600*cy1*cy3 - 93600*cy1*cy4 + 15120*cy1*cy5 - 720*cy1*cy6 + 243000*cy2*cy2 - 324000*cy2*cy3 + 102600*cy2*cy4 - 12960*cy2*cy5 + 360*cy2*cy6 + 93600*cy3*cy3 - 46800*cy3*cy4 + 3600*cy3*cy5 + 3600*cy4*cy4,
    -4320*cx0*cx0 + 38880*cx0*cx1 - 70560*cx0*cx2 + 65520*cx0*cx3 - 32400*cx0*cx4 + 7920*cx0*cx5 - 720*cx0*cx6 - 84960*cx1*cx1 + 297360*cx1*cx2 - 263520*cx1*cx3 + 122400*cx1*cx4 - 27360*cx1*cx5 + 2160*cx1*cx6 - 248400*cx2*cx2 + 414000*cx2*cx3 - 176400*cx2*cx4 + 34560*cx2*cx5 - 2160*cx2*cx6 - 158400*cx3*cx3 + 118800*cx3*cx4 - 18720*cx3*cx5 + 720*cx3*cx6 - 18000*cx4*cx4 + 3600*cx4*cx5 - 4320*cy0*cy0 + 38880*cy0*cy1 - 70560*cy0*cy2 + 65520*cy0*cy3 - 32400*cy0*cy4 + 7920*cy0*cy5 - 720*cy0*cy6 - 84960*cy1*cy1 + 297360*cy1*cy2 - 263520*cy1*cy3 + 122400*cy1*cy4 - 27360*cy1*cy5 + 2160*cy1*cy6 - 248400*cy2*cy2 + 414000*cy2*cy3 - 176400*cy2*cy4 + 34560*cy2*cy5 - 2160*cy2*cy6 - 158400*cy3*cy3 + 118800*cy3*cy4 - 18720*cy3*cy5 + 720*cy3*cy6 - 18000*cy4*cy4 + 3600*cy4*cy5,
    1620*cx0*cx0 - 16200*cx0*cx1 + 33120*cx0*cx2 - 35280*cx0*cx3 + 20520*cx0*cx4 - 6120*cx0*cx5 + 720*cx0*cx6 + 39780*cx1*cx1 - 159120*cx1*cx2 + 164880*cx1*cx3 - 92520*cx1*cx4 + 26280*cx1*cx5 - 2880*cx1*cx6 + 154800*cx2*cx2 - 309600*cx2*cx3 + 165600*cx2*cx4 - 43920*cx2*cx5 + 4320*cx2*cx6 + 147600*cx3*cx3 - 147600*cx3*cx4 + 35280*cx3*cx5 - 2880*cx3*cx6 + 33300*cx4*cx4 - 13320*cx4*cx5 + 720*cx4*cx6 + 900*cx5*cx5 + 1620*cy0*cy0 - 16200*cy0*cy1 + 33120*cy0*cy2 - 35280*cy0*cy3 + 20520*cy0*cy4 - 6120*cy0*cy5 + 720*cy0*cy6 + 39780*cy1*cy1 - 159120*cy1*cy2 + 164880*cy1*cy3 - 92520*cy1*cy4 + 26280*cy1*cy5 - 2880*cy1*cy6 + 154800*cy2*cy2 - 309600*cy2*cy3 + 165600*cy2*cy4 - 43920*cy2*cy5 + 4320*cy2*cy6 + 147600*cy3*cy3 - 147600*cy3*cy4 + 35280*cy3*cy5 - 2880*cy3*cy6 + 33300*cy4*cy4 - 13320*cy4*cy5 + 720*cy4*cy6 + 900*cy5*cy5,
    -360*cx0*cx0 + 3960*cx0*cx1 - 9000*cx0*cx2 + 10800*cx0*cx3 - 7200*cx0*cx4 + 2520*cx0*cx5 - 360*cx0*cx6 - 10800*cx1*cx1 + 48600*cx1*cx2 - 57600*cx1*cx3 + 37800*cx1*cx4 - 12960*cx1*cx5 + 1800*cx1*cx6 - 54000*cx2*cx2 + 126000*cx2*cx3 - 81000*cx2*cx4 + 27000*cx2*cx5 - 3600*cx2*cx6 - 72000*cx3*cx3 + 90000*cx3*cx4 - 28800*cx3*cx5 + 3600*cx3*cx6 - 27000*cx4*cx4 + 16200*cx4*cx5 - 1800*cx4*cx6 - 2160*cx5*cx5 + 360*cx5*cx6 - 360*cy0*cy0 + 3960*cy0*cy1 - 9000*cy0*cy2 + 10800*cy0*cy3 - 7200*cy0*cy4 + 2520*cy0*cy5 - 360*cy0*cy6 - 10800*cy1*cy1 + 48600*cy1*cy2 - 57600*cy1*cy3 + 37800*cy1*cy4 - 12960*cy1*cy5 + 1800*cy1*cy6 - 54000*cy2*cy2 + 126000*cy2*cy3 - 81000*cy2*cy4 + 27000*cy2*cy5 - 3600*cy2*cy6 - 72000*cy3*cy3 + 90000*cy3*cy4 - 28800*cy3*cy5 + 3600*cy3*cy6 - 27000*cy4*cy4 + 16200*cy4*cy5 - 1800*cy4*cy6 - 2160*cy5*cy5 + 360*cy5*cy6,
    36*cx0*cx0 - 432*cx0*cx1 + 1080*cx0*cx2 - 1440*cx0*cx3 + 1080*cx0*cx4 - 432*cx0*cx5 + 72*cx0*cx6 + 1296*cx1*cx1 - 6480*cx1*cx2 + 8640*cx1*cx3 - 6480*cx1*cx4 + 2592*cx1*cx5 - 432*cx1*cx6 + 8100*cx2*cx2 - 21600*cx2*cx3 + 16200*cx2*cx4 - 6480*cx2*cx5 + 1080*cx2*cx6 + 14400*cx3*cx3 - 21600*cx3*cx4 + 8640*cx3*cx5 - 1440*cx3*cx6 + 8100*cx4*cx4 - 6480*cx4*cx5 + 1080*cx4*cx6 + 1296*cx5*cx5 - 432*cx5*cx6 + 36*cx6*cx6 + 36*cy0*cy0 - 432*cy0*cy1 + 1080*cy0*cy2 - 1440*cy0*cy3 + 1080*cy0*cy4 - 432*cy0*cy5 + 72*cy0*cy6 + 1296*cy1*cy1 - 6480*cy1*cy2 + 8640*cy1*cy3 - 6480*cy1*cy4 + 2592*cy1*cy5 - 432*cy1*cy6 + 8100*cy2*cy2 - 21600*cy2*cy3 + 16200*cy2*cy4 - 6480*cy2*cy5 + 1080*cy2*cy6 + 14400*cy3*cy3 - 21600*cy3*cy4 + 8640*cy3*cy5 - 1440*cy3*cy6 + 8100*cy4*cy4 - 6480*cy4*cy5 + 1080*cy4*cy6 + 1296*cy5*cy5 - 432*cy5*cy6 + 36*cy6*cy6
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_7_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3, Scalar cx4, Scalar cy4, Scalar cx5, Scalar cy5, Scalar cx6, Scalar cy6, Scalar cx7, Scalar cy7,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 12>::find_real_roots_in_interval({
        49*cx0*cx0 - 98*cx0*cx1 + 49*cx1*cx1 + 49*cy0*cy0 - 98*cy0*cy1 + 49*cy1*cy1,
    -588*cx0*cx0 + 1764*cx0*cx1 - 588*cx0*cx2 - 1176*cx1*cx1 + 588*cx1*cx2 - 588*cy0*cy0 + 1764*cy0*cy1 - 588*cy0*cy2 - 1176*cy1*cy1 + 588*cy1*cy2,
    3234*cx0*cx0 - 12936*cx0*cx1 + 7938*cx0*cx2 - 1470*cx0*cx3 + 11466*cx1*cx1 - 11466*cx1*cx2 + 1470*cx1*cx3 + 1764*cx2*cx2 + 3234*cy0*cy0 - 12936*cy0*cy1 + 7938*cy0*cy2 - 1470*cy0*cy3 + 11466*cy1*cy1 - 11466*cy1*cy2 + 1470*cy1*cy3 + 1764*cy2*cy2,
    -10780*cx0*cx0 + 53900*cx0*cx1 - 47040*cx0*cx2 + 16660*cx0*cx3 - 1960*cx0*cx4 - 60760*cx1*cx1 + 91140*cx1*cx2 - 25480*cx1*cx3 + 1960*cx1*cx4 - 26460*cx2*cx2 + 8820*cx2*cx3 - 10780*cy0*cy0 + 53900*cy0*cy1 - 47040*cy0*cy2 + 16660*cy0*cy3 - 1960*cy0*cy4 - 60760*cy1*cy1 + 91140*cy1*cy2 - 25480*cy1*cy3 + 1960*cy1*cy4 - 26460*cy2*cy2 + 8820*cy2*cy3,
    24255*cx0*cx0 - 145530*cx0*cx1 + 163170*cx0*cx2 - 83790*cx0*cx3 + 19110*cx0*cx4 - 1470*cx0*cx5 + 200655*cx1*cx1 - 401310*cx1*cx2 + 174930*cx1*cx3 - 30870*cx1*cx4 + 1470*cx1*cx5 + 169785*cx2*cx2 - 113190*cx2*cx3 + 11760*cx2*cx4 + 11025*cx3*cx3 + 24255*cy0*cy0 - 145530*cy0*cy1 + 163170*cy0*cy2 - 83790*cy0*cy3 + 19110*cy0*cy4 - 1470*cy0*cy5 + 200655*cy1*cy1 - 401310*cy1*cy2 + 174930*cy1*cy3 - 30870*cy1*cy4 + 1470*cy1*cy5 + 169785*cy2*cy2 - 113190*cy2*cy3 + 11760*cy2*cy4 + 11025*cy3*cy3,
    -38808*cx0*cx0 + 271656*cx0*cx1 - 370440*cx0*cx2 + 246960*cx0*cx3 - 82320*cx0*cx4 + 12348*cx0*cx5 - 588*cx0*cx6 - 444528*cx1*cx1 + 1111320*cx1*cx2 - 658560*cx1*cx3 + 185220*cx1*cx4 - 21168*cx1*cx5 + 588*cx1*cx6 - 617400*cx2*cx2 + 617400*cx2*cx3 - 132300*cx2*cx4 + 8820*cx2*cx5 - 117600*cx3*cx3 + 29400*cx3*cx4 - 38808*cy0*cy0 + 271656*cy0*cy1 - 370440*cy0*cy2 + 246960*cy0*cy3 - 82320*cy0*cy4 + 12348*cy0*cy5 - 588*cy0*cy6 - 444528*cy1*cy1 + 1111320*cy1*cy2 - 658560*cy1*cy3 + 185220*cy1*cy4 - 21168*cy1*cy5 + 588*cy1*cy6 - 617400*cy2*cy2 + 617400*cy2*cy3 - 132300*cy2*cy4 + 8820*cy2*cy5 - 117600*cy3*cy3 + 29400*cy3*cy4,
    45276*cx0*cx0 - 362208*cx0*cx1 + 580356*cx0*cx2 - 473340*cx0*cx3 + 205800*cx0*cx4 - 45276*cx0*cx5 + 4214*cx0*cx6 - 98*cx0*cx7 + 687372*cx1*cx1 - 2062116*cx1*cx2 + 1543500*cx1*cx3 - 596820*cx1*cx4 + 110544*cx1*cx5 - 7742*cx1*cx6 + 98*cx1*cx7 + 1420020*cx2*cx2 - 1893360*cx2*cx3 + 618870*cx2*cx4 - 87318*cx2*cx5 + 3528*cx2*cx6 + 534100*cx3*cx3 - 267050*cx3*cx4 + 22050*cx3*cx5 + 19600*cx4*cx4 + 45276*cy0*cy0 - 362208*cy0*cy1 + 580356*cy0*cy2 - 473340*cy0*cy3 + 205800*cy0*cy4 - 45276*cy0*cy5 + 4214*cy0*cy6 - 98*cy0*cy7 + 687372*cy1*cy1 - 2062116*cy1*cy2 + 1543500*cy1*cy3 - 596820*cy1*cy4 + 110544*cy1*cy5 - 7742*cy1*cy6 + 98*cy1*cy7 + 1420020*cy2*cy2 - 1893360*cy2*cy3 + 618870*cy2*cy4 - 87318*cy2*cy5 + 3528*cy2*cy6 + 534100*cy3*cy3 - 267050*cy3*cy4 + 22050*cy3*cy5 + 19600*cy4*cy4,
    -38808*cx0*cx0 + 349272*cx0*cx1 - 642096*cx0*cx2 + 617400*cx0*cx3 - 329280*cx0*cx4 + 94668*cx0*cx5 - 12936*cx0*cx6 + 588*cx0*cx7 - 754992*cx1*cx1 + 2642472*cx1*cx2 - 2387280*cx1*cx3 + 1173060*cx1*cx4 - 301056*cx1*cx5 + 34692*cx1*cx6 - 1176*cx1*cx7 - 2173248*cx2*cx2 + 3622080*cx2*cx3 - 1593480*cx2*cx4 + 347508*cx2*cx5 - 30576*cx2*cx6 + 588*cx2*cx7 - 1352400*cx3*cx3 + 1014300*cx3*cx4 - 170520*cx3*cx5 + 8820*cx3*cx6 - 147000*cx4*cx4 + 29400*cx4*cx5 - 38808*cy0*cy0 + 349272*cy0*cy1 - 642096*cy0*cy2 + 617400*cy0*cy3 - 329280*cy0*cy4 + 94668*cy0*cy5 - 12936*cy0*cy6 + 588*cy0*cy7 - 754992*cy1*cy1 + 2642472*cy1*cy2 - 2387280*cy1*cy3 + 1173060*cy1*cy4 - 301056*cy1*cy5 + 34692*cy1*cy6 - 1176*cy1*cy7 - 2173248*cy2*cy2 + 3622080*cy2*cy3 - 1593480*cy2*cy4 + 347508*cy2*cy5 - 30576*cy2*cy6 + 588*cy2*cy7 - 1352400*cy3*cy3 + 1014300*cy3*cy4 - 170520*cy3*cy5 + 8820*cy3*cy6 - 147000*cy4*cy4 + 29400*cy4*cy5,
    24255*cx0*cx0 - 242550*cx0*cx1 + 502740*cx0*cx2 - 555660*cx0*cx3 + 349860*cx0*cx4 - 123480*cx0*cx5 + 22050*cx0*cx6 - 1470*cx0*cx7 + 588735*cx1*cx1 - 2354940*cx1*cx2 + 2490180*cx1*cx3 - 1481760*cx1*cx4 + 485100*cx1*cx5 - 77910*cx1*cx6 + 4410*cx1*cx7 + 2253510*cx2*cx2 - 4507020*cx2*cx3 + 2491650*cx2*cx4 - 736470*cx2*cx5 + 101430*cx2*cx6 - 4410*cx2*cx7 + 2094750*cx3*cx3 - 2094750*cx3*cx4 + 533610*cx3*cx5 - 57330*cx3*cx6 + 1470*cx3*cx7 + 452025*cx4*cx4 - 180810*cx4*cx5 + 11760*cx4*cx6 + 11025*cx5*cx5 + 24255*cy0*cy0 - 242550*cy0*cy1 + 502740*cy0*cy2 - 555660*cy0*cy3 + 349860*cy0*cy4 - 123480*cy0*cy5 + 22050*cy0*cy6 - 1470*cy0*cy7 + 588735*cy1*cy1 - 2354940*cy1*cy2 + 2490180*cy1*cy3 - 1481760*cy1*cy4 + 485100*cy1*cy5 - 77910*cy1*cy6 + 4410*cy1*cy7 + 2253510*cy2*cy2 - 4507020*cy2*cy3 + 2491650*cy2*cy4 - 736470*cy2*cy5 + 101430*cy2*cy6 - 4410*cy2*cy7 + 2094750*cy3*cy3 - 2094750*cy3*cy4 + 533610*cy3*cy5 - 57330*cy3*cy6 + 1470*cy3*cy7 + 452025*cy4*cy4 - 180810*cy4*cy5 + 11760*cy4*cy6 + 11025*cy5*cy5,
    -10780*cx0*cx0 + 118580*cx0*cx1 - 273420*cx0*cx2 + 341040*cx0*cx3 - 246960*cx0*cx4 + 102900*cx0*cx5 - 22540*cx0*cx6 + 1960*cx0*cx7 - 319480*cx1*cx1 + 1437660*cx1*cx2 - 1740480*cx1*cx3 + 1214220*cx1*cx4 - 482160*cx1*cx5 + 98980*cx1*cx6 - 7840*cx1*cx7 - 1569960*cx2*cx2 + 3663240*cx2*cx3 - 2437260*cx2*cx4 + 908460*cx2*cx5 - 170520*cx2*cx6 + 11760*cx2*cx7 - 2038400*cx3*cx3 + 2548000*cx3*cx4 - 870240*cx3*cx5 + 143080*cx3*cx6 - 7840*cx3*cx7 - 730100*cx4*cx4 + 438060*cx4*cx5 - 57820*cx4*cx6 + 1960*cx4*cx7 - 52920*cx5*cx5 + 8820*cx5*cx6 - 10780*cy0*cy0 + 118580*cy0*cy1 - 273420*cy0*cy2 + 341040*cy0*cy3 - 246960*cy0*cy4 + 102900*cy0*cy5 - 22540*cy0*cy6 + 1960*cy0*cy7 - 319480*cy1*cy1 + 1437660*cy1*cy2 - 1740480*cy1*cy3 + 1214220*cy1*cy4 - 482160*cy1*cy5 + 98980*cy1*cy6 - 7840*cy1*cy7 - 1569960*cy2*cy2 + 3663240*cy2*cy3 - 2437260*cy2*cy4 + 908460*cy2*cy5 - 170520*cy2*cy6 + 11760*cy2*cy7 - 2038400*cy3*cy3 + 2548000*cy3*cy4 - 870240*cy3*cy5 + 143080*cy3*cy6 - 7840*cy3*cy7 - 730100*cy4*cy4 + 438060*cy4*cy5 - 57820*cy4*cy6 + 1960*cy4*cy7 - 52920*cy5*cy5 + 8820*cy5*cy6,
    3234*cx0*cx0 - 38808*cx0*cx1 + 98490*cx0*cx2 - 136710*cx0*cx3 + 111720*cx0*cx4 - 53508*cx0*cx5 + 13818*cx0*cx6 - 1470*cx0*cx7 + 114954*cx1*cx1 - 574770*cx1*cx2 + 783510*cx1*cx3 - 626220*cx1*cx4 + 291648*cx1*cx5 - 72618*cx1*cx6 + 7350*cx1*cx7 + 705600*cx2*cx2 - 1881600*cx2*cx3 + 1462650*cx2*cx4 - 657090*cx2*cx5 + 155820*cx2*cx6 - 14700*cx2*cx7 + 1220100*cx3*cx3 - 1830150*cx3*cx4 + 783510*cx3*cx5 - 173460*cx3*cx6 + 14700*cx3*cx7 + 654150*cx4*cx4 - 523320*cx4*cx5 + 104370*cx4*cx6 - 7350*cx4*cx7 + 94374*cx5*cx5 - 31458*cx5*cx6 + 1470*cx5*cx7 + 1764*cx6*cx6 + 3234*cy0*cy0 - 38808*cy0*cy1 + 98490*cy0*cy2 - 136710*cy0*cy3 + 111720*cy0*cy4 - 53508*cy0*cy5 + 13818*cy0*cy6 - 1470*cy0*cy7 + 114954*cy1*cy1 - 574770*cy1*cy2 + 783510*cy1*cy3 - 626220*cy1*cy4 + 291648*cy1*cy5 - 72618*cy1*cy6 + 7350*cy1*cy7 + 705600*cy2*cy2 - 1881600*cy2*cy3 + 1462650*cy2*cy4 - 657090*cy2*cy5 + 155820*cy2*cy6 - 14700*cy2*cy7 + 1220100*cy3*cy3 - 1830150*cy3*cy4 + 783510*cy3*cy5 - 173460*cy3*cy6 + 14700*cy3*cy7 + 654150*cy4*cy4 - 523320*cy4*cy5 + 104370*cy4*cy6 - 7350*cy4*cy7 + 94374*cy5*cy5 - 31458*cy5*cy6 + 1470*cy5*cy7 + 1764*cy6*cy6,
    -588*cx0*cx0 + 7644*cx0*cx1 - 21168*cx0*cx2 + 32340*cx0*cx3 - 29400*cx0*cx4 + 15876*cx0*cx5 - 4704*cx0*cx6 + 588*cx0*cx7 - 24696*cx1*cx1 + 135828*cx1*cx2 - 205800*cx1*cx3 + 185220*cx1*cx4 - 98784*cx1*cx5 + 28812*cx1*cx6 - 3528*cx1*cx7 - 185220*cx2*cx2 + 555660*cx2*cx3 - 493920*cx2*cx4 + 259308*cx2*cx5 - 74088*cx2*cx6 + 8820*cx2*cx7 - 411600*cx3*cx3 + 720300*cx3*cx4 - 370440*cx3*cx5 + 102900*cx3*cx6 - 11760*cx3*cx7 - 308700*cx4*cx4 + 308700*cx4*cx5 - 82320*cx4*cx6 + 8820*cx4*cx7 - 74088*cx5*cx5 + 37044*cx5*cx6 - 3528*cx5*cx7 - 4116*cx6*cx6 + 588*cx6*cx7 - 588*cy0*cy0 + 7644*cy0*cy1 - 21168*cy0*cy2 + 32340*cy0*cy3 - 29400*cy0*cy4 + 15876*cy0*cy5 - 4704*cy0*cy6 + 588*cy0*cy7 - 24696*cy1*cy1 + 135828*cy1*cy2 - 205800*cy1*cy3 + 185220*cy1*cy4 - 98784*cy1*cy5 + 28812*cy1*cy6 - 3528*cy1*cy7 - 185220*cy2*cy2 + 555660*cy2*cy3 - 493920*cy2*cy4 + 259308*cy2*cy5 - 74088*cy2*cy6 + 8820*cy2*cy7 - 411600*cy3*cy3 + 720300*cy3*cy4 - 370440*cy3*cy5 + 102900*cy3*cy6 - 11760*cy3*cy7 - 308700*cy4*cy4 + 308700*cy4*cy5 - 82320*cy4*cy6 + 8820*cy4*cy7 - 74088*cy5*cy5 + 37044*cy5*cy6 - 3528*cy5*cy7 - 4116*cy6*cy6 + 588*cy6*cy7,
    49*cx0*cx0 - 686*cx0*cx1 + 2058*cx0*cx2 - 3430*cx0*cx3 + 3430*cx0*cx4 - 2058*cx0*cx5 + 686*cx0*cx6 - 98*cx0*cx7 + 2401*cx1*cx1 - 14406*cx1*cx2 + 24010*cx1*cx3 - 24010*cx1*cx4 + 14406*cx1*cx5 - 4802*cx1*cx6 + 686*cx1*cx7 + 21609*cx2*cx2 - 72030*cx2*cx3 + 72030*cx2*cx4 - 43218*cx2*cx5 + 14406*cx2*cx6 - 2058*cx2*cx7 + 60025*cx3*cx3 - 120050*cx3*cx4 + 72030*cx3*cx5 - 24010*cx3*cx6 + 3430*cx3*cx7 + 60025*cx4*cx4 - 72030*cx4*cx5 + 24010*cx4*cx6 - 3430*cx4*cx7 + 21609*cx5*cx5 - 14406*cx5*cx6 + 2058*cx5*cx7 + 2401*cx6*cx6 - 686*cx6*cx7 + 49*cx7*cx7 + 49*cy0*cy0 - 686*cy0*cy1 + 2058*cy0*cy2 - 3430*cy0*cy3 + 3430*cy0*cy4 - 2058*cy0*cy5 + 686*cy0*cy6 - 98*cy0*cy7 + 2401*cy1*cy1 - 14406*cy1*cy2 + 24010*cy1*cy3 - 24010*cy1*cy4 + 14406*cy1*cy5 - 4802*cy1*cy6 + 686*cy1*cy7 + 21609*cy2*cy2 - 72030*cy2*cy3 + 72030*cy2*cy4 - 43218*cy2*cy5 + 14406*cy2*cy6 - 2058*cy2*cy7 + 60025*cy3*cy3 - 120050*cy3*cy4 + 72030*cy3*cy5 - 24010*cy3*cy6 + 3430*cy3*cy7 + 60025*cy4*cy4 - 72030*cy4*cy5 + 24010*cy4*cy6 - 3430*cy4*cy7 + 21609*cy5*cy5 - 14406*cy5*cy6 + 2058*cy5*cy7 + 2401*cy6*cy6 - 686*cy6*cy7 + 49*cy7*cy7
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_8_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3, Scalar cx4, Scalar cy4, Scalar cx5, Scalar cy5, Scalar cx6, Scalar cy6, Scalar cx7, Scalar cy7, Scalar cx8, Scalar cy8,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 14>::find_real_roots_in_interval({
        64*cx0*cx0 - 128*cx0*cx1 + 64*cx1*cx1 + 64*cy0*cy0 - 128*cy0*cy1 + 64*cy1*cy1,
    -896*cx0*cx0 + 2688*cx0*cx1 - 896*cx0*cx2 - 1792*cx1*cx1 + 896*cx1*cx2 - 896*cy0*cy0 + 2688*cy0*cy1 - 896*cy0*cy2 - 1792*cy1*cy1 + 896*cy1*cy2,
    5824*cx0*cx0 - 23296*cx0*cx1 + 14336*cx0*cx2 - 2688*cx0*cx3 + 20608*cx1*cx1 - 20608*cx1*cx2 + 2688*cx1*cx3 + 3136*cx2*cx2 + 5824*cy0*cy0 - 23296*cy0*cy1 + 14336*cy0*cy2 - 2688*cy0*cy3 + 20608*cy1*cy1 - 20608*cy1*cy2 + 2688*cy1*cy3 + 3136*cy2*cy2,
    -23296*cx0*cx0 + 116480*cx0*cx1 - 102144*cx0*cx2 + 36736*cx0*cx3 - 4480*cx0*cx4 - 130816*cx1*cx1 + 196224*cx1*cx2 - 55552*cx1*cx3 + 4480*cx1*cx4 - 56448*cx2*cx2 + 18816*cx2*cx3 - 23296*cy0*cy0 + 116480*cy0*cy1 - 102144*cy0*cy2 + 36736*cy0*cy3 - 4480*cy0*cy4 - 130816*cy1*cy1 + 196224*cy1*cy2 - 55552*cy1*cy3 + 4480*cy1*cy4 - 56448*cy2*cy2 + 18816*cy2*cy3,
    64064*cx0*cx0 - 384384*cx0*cx1 + 433664*cx0*cx2 - 226688*cx0*cx3 + 53760*cx0*cx4 - 4480*cx0*cx5 + 527296*cx1*cx1 - 1054592*cx1*cx2 + 465024*cx1*cx3 - 85120*cx1*cx4 + 4480*cx1*cx5 + 442176*cx2*cx2 - 294784*cx2*cx3 + 31360*cx2*cx4 + 28224*cx3*cx3 + 64064*cy0*cy0 - 384384*cy0*cy1 + 433664*cy0*cy2 - 226688*cy0*cy3 + 53760*cy0*cy4 - 4480*cy0*cy5 + 527296*cy1*cy1 - 1054592*cy1*cy2 + 465024*cy1*cy3 - 85120*cy1*cy4 + 4480*cy1*cy5 + 442176*cy2*cy2 - 294784*cy2*cy3 + 31360*cy2*cy4 + 28224*cy3*cy3,
    -128128*cx0*cx0 + 896896*cx0*cx1 - 1232000*cx0*cx2 + 837760*cx0*cx3 - 291200*cx0*cx4 + 47488*cx0*cx5 - 2688*cx0*cx6 - 1458688*cx1*cx1 + 3646720*cx1*cx2 - 2186240*cx1*cx3 + 636160*cx1*cx4 - 78848*cx1*cx5 + 2688*cx1*cx6 - 2007040*cx2*cx2 + 2007040*cx2*cx3 - 439040*cx2*cx4 + 31360*cx2*cx5 - 376320*cx3*cx3 + 94080*cx3*cx4 - 128128*cy0*cy0 + 896896*cy0*cy1 - 1232000*cy0*cy2 + 837760*cy0*cy3 - 291200*cy0*cy4 + 47488*cy0*cy5 - 2688*cy0*cy6 - 1458688*cy1*cy1 + 3646720*cy1*cy2 - 2186240*cy1*cy3 + 636160*cy1*cy4 - 78848*cy1*cy5 + 2688*cy1*cy6 - 2007040*cy2*cy2 + 2007040*cy2*cy3 - 439040*cy2*cy4 + 31360*cy2*cy5 - 376320*cy3*cy3 + 94080*cy3*cy4,
    192192*cx0*cx0 - 1537536*cx0*cx1 + 2483712*cx0*cx2 - 2069760*cx0*cx3 + 940800*cx0*cx4 - 225792*cx0*cx5 + 25088*cx0*cx6 - 896*cx0*cx7 + 2897664*cx1*cx1 - 8692992*cx1*cx2 + 6585600*cx1*cx3 - 2634240*cx1*cx4 + 526848*cx1*cx5 - 43904*cx1*cx6 + 896*cx1*cx7 + 5927040*cx2*cx2 - 7902720*cx2*cx3 + 2634240*cx2*cx4 - 395136*cx2*cx5 + 18816*cx2*cx6 + 2195200*cx3*cx3 - 1097600*cx3*cx4 + 94080*cx3*cx5 + 78400*cx4*cx4 + 192192*cy0*cy0 - 1537536*cy0*cy1 + 2483712*cy0*cy2 - 2069760*cy0*cy3 + 940800*cy0*cy4 - 225792*cy0*cy5 + 25088*cy0*cy6 - 896*cy0*cy7 + 2897664*cy1*cy1 - 8692992*cy1*cy2 + 6585600*cy1*cy3 - 2634240*cy1*cy4 + 526848*cy1*cy5 - 43904*cy1*cy6 + 896*cy1*cy7 + 5927040*cy2*cy2 - 7902720*cy2*cy3 + 2634240*cy2*cy4 - 395136*cy2*cy5 + 18816*cy2*cy6 + 2195200*cy3*cy3 - 1097600*cy3*cy4 + 94080*cy3*cy5 + 78400*cy4*cy4,
    -219648*cx0*cx0 + 1976832*cx0*cx1 - 3666432*cx0*cx2 + 3607296*cx0*cx3 - 2016000*cx0*cx4 + 634368*cx0*cx5 - 103936*cx0*cx6 + 7296*cx0*cx7 - 128*cx0*cx8 - 4240896*cx1*cx1 + 14843136*cx1*cx2 - 13579776*cx1*cx3 + 6908160*cx1*cx4 - 1913856*cx1*cx5 + 260736*cx1*cx6 - 13568*cx1*cx7 + 128*cx1*cx8 - 12079872*cx2*cx2 + 20133120*cx2*cx3 - 9031680*cx2*cx4 + 2088576*cx2*cx5 - 213248*cx2*cx6 + 6272*cx2*cx7 - 7400960*cx3*cx3 + 5550720*cx3*cx4 - 965888*cx3*cx5 + 56448*cx3*cx6 - 784000*cx4*cx4 + 156800*cx4*cx5 - 219648*cy0*cy0 + 1976832*cy0*cy1 - 3666432*cy0*cy2 + 3607296*cy0*cy3 - 2016000*cy0*cy4 + 634368*cy0*cy5 - 103936*cy0*cy6 + 7296*cy0*cy7 - 128*cy0*cy8 - 4240896*cy1*cy1 + 14843136*cy1*cy2 - 13579776*cy1*cy3 + 6908160*cy1*cy4 - 1913856*cy1*cy5 + 260736*cy1*cy6 - 13568*cy1*cy7 + 128*cy1*cy8 - 12079872*cy2*cy2 + 20133120*cy2*cy3 - 9031680*cy2*cy4 + 2088576*cy2*cy5 - 213248*cy2*cy6 + 6272*cy2*cy7 - 7400960*cy3*cy3 + 5550720*cy3*cy4 - 965888*cy3*cy5 + 56448*cy3*cy6 - 784000*cy4*cy4 + 156800*cy4*cy5,
    192192*cx0*cx0 - 1921920*cx0*cx1 + 4021248*cx0*cx2 - 4553472*cx0*cx3 + 3010560*cx0*cx4 - 1166592*cx0*cx5 + 250880*cx0*cx6 - 25984*cx0*cx7 + 896*cx0*cx8 + 4627392*cx1*cx1 - 18509568*cx1*cx2 + 19832064*cx1*cx3 - 12230400*cx1*cx4 + 4327680*cx1*cx5 - 821632*cx1*cx6 + 70784*cx1*cx7 - 1792*cx1*cx8 + 17517696*cx2*cx2 - 35035392*cx2*cx3 + 19756800*cx2*cx4 - 6190464*cx2*cx5 + 984704*cx2*cx6 - 63616*cx2*cx7 + 896*cx2*cx8 + 16024960*cx3*cx3 - 16024960*cx3*cx4 + 4221056*cx3*cx5 - 508032*cx3*cx6 + 18816*cx3*cx7 + 3371200*cx4*cx4 - 1348480*cx4*cx5 + 94080*cx4*cx6 + 78400*cx5*cx5 + 192192*cy0*cy0 - 1921920*cy0*cy1 + 4021248*cy0*cy2 - 4553472*cy0*cy3 + 3010560*cy0*cy4 - 1166592*cy0*cy5 + 250880*cy0*cy6 - 25984*cy0*cy7 + 896*cy0*cy8 + 4627392*cy1*cy1 - 18509568*cy1*cy2 + 19832064*cy1*cy3 - 12230400*cy1*cy4 + 4327680*cy1*cy5 - 821632*cy1*cy6 + 70784*cy1*cy7 - 1792*cy1*cy8 + 17517696*cy2*cy2 - 35035392*cy2*cy3 + 19756800*cy2*cy4 - 6190464*cy2*cy5 + 984704*cy2*cy6 - 63616*cy2*cy7 + 896*cy2*cy8 + 16024960*cy3*cy3 - 16024960*cy3*cy4 + 4221056*cy3*cy5 - 508032*cy3*cy6 + 18816*cy3*cy7 + 3371200*cy4*cy4 - 1348480*cy4*cy5 + 94080*cy4*cy6 + 78400*cy5*cy5,
    -128128*cx0*cx0 + 1409408*cx0*cx1 - 3282048*cx0*cx2 + 4198656*cx0*cx3 - 3198720*cx0*cx4 + 1467648*cx0*cx5 - 388864*cx0*cx6 + 52864*cx0*cx7 - 2688*cx0*cx8 - 3764992*cx1*cx1 + 16942464*cx1*cx2 - 20794368*cx1*cx3 + 15052800*cx1*cx4 - 6472704*cx1*cx5 + 1574272*cx1*cx6 - 189952*cx1*cx7 + 8064*cx1*cx8 - 18289152*cx2*cx2 + 42674688*cx2*cx3 - 28976640*cx2*cx4 + 11458944*cx2*cx5 - 2483712*cx2*cx6 + 252672*cx2*cx7 - 8064*cx2*cx8 - 23356928*cx3*cx3 + 29196160*cx3*cx4 - 10311168*cx3*cx5 + 1894144*cx3*cx6 - 146944*cx3*cx7 + 2688*cx3*cx8 - 8153600*cx4*cx4 + 4892160*cx4*cx5 - 689920*cx4*cx6 + 31360*cx4*cx7 - 564480*cx5*cx5 + 94080*cx5*cx6 - 128128*cy0*cy0 + 1409408*cy0*cy1 - 3282048*cy0*cy2 + 4198656*cy0*cy3 - 3198720*cy0*cy4 + 1467648*cy0*cy5 - 388864*cy0*cy6 + 52864*cy0*cy7 - 2688*cy0*cy8 - 3764992*cy1*cy1 + 16942464*cy1*cy2 - 20794368*cy1*cy3 + 15052800*cy1*cy4 - 6472704*cy1*cy5 + 1574272*cy1*cy6 - 189952*cy1*cy7 + 8064*cy1*cy8 - 18289152*cy2*cy2 + 42674688*cy2*cy3 - 28976640*cy2*cy4 + 11458944*cy2*cy5 - 2483712*cy2*cy6 + 252672*cy2*cy7 - 8064*cy2*cy8 - 23356928*cy3*cy3 + 29196160*cy3*cy4 - 10311168*cy3*cy5 + 1894144*cy3*cy6 - 146944*cy3*cy7 + 2688*cy3*cy8 - 8153600*cy4*cy4 + 4892160*cy4*cy5 - 689920*cy4*cy6 + 31360*cy4*cy7 - 564480*cy5*cy5 + 94080*cy5*cy6,
    64064*cx0*cx0 - 768768*cx0*cx1 + 1971200*cx0*cx2 - 2808960*cx0*cx3 + 2419200*cx0*cx4 - 1279488*cx0*cx5 + 401408*cx0*cx6 - 67200*cx0*cx7 + 4480*cx0*cx8 + 2257024*cx1*cx1 - 11285120*cx1*cx2 + 15603840*cx1*cx3 - 12956160*cx1*cx4 + 6547968*cx1*cx5 - 1938048*cx1*cx6 + 300160*cx1*cx7 - 17920*cx1*cx8 + 13688640*cx2*cx2 - 36503040*cx2*cx3 + 28976640*cx2*cx4 - 13829760*cx2*cx5 + 3794560*cx2*cx6 - 528640*cx2*cx7 + 26880*cx2*cx8 + 23269120*cx3*cx3 - 34903680*cx3*cx4 + 15460480*cx3*cx5 - 3825920*cx3*cx6 + 456960*cx3*cx7 - 17920*cx3*cx8 + 12152000*cx4*cx4 - 9721600*cx4*cx5 + 2069760*cx4*cx6 - 192640*cx4*cx7 + 4480*cx4*cx8 + 1674624*cx5*cx5 - 558208*cx5*cx6 + 31360*cx5*cx7 + 28224*cx6*cx6 + 64064*cy0*cy0 - 768768*cy0*cy1 + 1971200*cy0*cy2 - 2808960*cy0*cy3 + 2419200*cy0*cy4 - 1279488*cy0*cy5 + 401408*cy0*cy6 - 67200*cy0*cy7 + 4480*cy0*cy8 + 2257024*cy1*cy1 - 11285120*cy1*cy2 + 15603840*cy1*cy3 - 12956160*cy1*cy4 + 6547968*cy1*cy5 - 1938048*cy1*cy6 + 300160*cy1*cy7 - 17920*cy1*cy8 + 13688640*cy2*cy2 - 36503040*cy2*cy3 + 28976640*cy2*cy4 - 13829760*cy2*cy5 + 3794560*cy2*cy6 - 528640*cy2*cy7 + 26880*cy2*cy8 + 23269120*cy3*cy3 - 34903680*cy3*cy4 + 15460480*cy3*cy5 - 3825920*cy3*cy6 + 456960*cy3*cy7 - 17920*cy3*cy8 + 12152000*cy4*cy4 - 9721600*cy4*cy5 + 2069760*cy4*cy6 - 192640*cy4*cy7 + 4480*cy4*cy8 + 1674624*cy5*cy5 - 558208*cy5*cy6 + 31360*cy5*cy7 + 28224*cy6*cy6,
    -23296*cx0*cx0 + 302848*cx0*cx1 - 847616*cx0*cx2 + 1330560*cx0*cx3 - 1276800*cx0*cx4 + 763392*cx0*cx5 - 275968*cx0*cx6 + 54656*cx0*cx7 - 4480*cx0*cx8 - 969472*cx1*cx1 + 5332096*cx1*cx2 - 8198400*cx1*cx3 + 7674240*cx1*cx4 - 4451328*cx1*cx5 + 1549184*cx1*cx6 - 292096*cx1*cx7 + 22400*cx1*cx8 - 7181440*cx2*cx2 + 21544320*cx2*cx3 - 19568640*cx2*cx4 + 10932096*cx2*cx5 - 3625216*cx2*cx6 + 640640*cx2*cx7 - 44800*cx2*cx8 - 15680000*cx3*cx3 + 27440000*cx3*cx4 - 14613760*cx3*cx5 + 4547200*cx3*cx6 - 734720*cx3*cx7 + 44800*cx3*cx8 - 11446400*cx4*cx4 + 11446400*cx4*cx5 - 3261440*cx4*cx6 + 461440*cx4*cx7 - 22400*cx4*cx8 - 2621696*cx5*cx5 + 1310848*cx5*cx6 - 148736*cx5*cx7 + 4480*cx5*cx8 - 131712*cx6*cx6 + 18816*cx6*cx7 - 23296*cy0*cy0 + 302848*cy0*cy1 - 847616*cy0*cy2 + 1330560*cy0*cy3 - 1276800*cy0*cy4 + 763392*cy0*cy5 - 275968*cy0*cy6 + 54656*cy0*cy7 - 4480*cy0*cy8 - 969472*cy1*cy1 + 5332096*cy1*cy2 - 8198400*cy1*cy3 + 7674240*cy1*cy4 - 4451328*cy1*cy5 + 1549184*cy1*cy6 - 292096*cy1*cy7 + 22400*cy1*cy8 - 7181440*cy2*cy2 + 21544320*cy2*cy3 - 19568640*cy2*cy4 + 10932096*cy2*cy5 - 3625216*cy2*cy6 + 640640*cy2*cy7 - 44800*cy2*cy8 - 15680000*cy3*cy3 + 27440000*cy3*cy4 - 14613760*cy3*cy5 + 4547200*cy3*cy6 - 734720*cy3*cy7 + 44800*cy3*cy8 - 11446400*cy4*cy4 + 11446400*cy4*cy5 - 3261440*cy4*cy6 + 461440*cy4*cy7 - 22400*cy4*cy8 - 2621696*cy5*cy5 + 1310848*cy5*cy6 - 148736*cy5*cy7 + 4480*cy5*cy8 - 131712*cy6*cy6 + 18816*cy6*cy7,
    5824*cx0*cx0 - 81536*cx0*cx1 + 247296*cx0*cx2 - 423808*cx0*cx3 + 448000*cx0*cx4 - 298368*cx0*cx5 + 121856*cx0*cx6 - 27776*cx0*cx7 + 2688*cx0*cx8 + 282688*cx1*cx1 - 1696128*cx1*cx2 + 2869888*cx1*cx3 - 2988160*cx1*cx4 + 1954176*cx1*cx5 - 780416*cx1*cx6 + 172928*cx1*cx7 - 16128*cx1*cx8 + 2511936*cx2*cx2 - 8373120*cx2*cx3 + 8561280*cx2*cx4 - 5475456*cx2*cx5 + 2126208*cx2*cx6 - 454272*cx2*cx7 + 40320*cx2*cx8 + 6852160*cx3*cx3 - 13704320*cx3*cx4 + 8523648*cx3*cx5 - 3192448*cx3*cx6 + 649600*cx3*cx7 - 53760*cx3*cx8 + 6664000*cx4*cx4 - 7996800*cx4*cx5 + 2853760*cx4*cx6 - 542080*cx4*cx7 + 40320*cx4*cx8 + 2286144*cx5*cx5 - 1524096*cx5*cx6 + 260736*cx5*cx7 - 16128*cx5*cx8 + 228928*cx6*cx6 - 65408*cx6*cx7 + 2688*cx6*cx8 + 3136*cx7*cx7 + 5824*cy0*cy0 - 81536*cy0*cy1 + 247296*cy0*cy2 - 423808*cy0*cy3 + 448000*cy0*cy4 - 298368*cy0*cy5 + 121856*cy0*cy6 - 27776*cy0*cy7 + 2688*cy0*cy8 + 282688*cy1*cy1 - 1696128*cy1*cy2 + 2869888*cy1*cy3 - 2988160*cy1*cy4 + 1954176*cy1*cy5 - 780416*cy1*cy6 + 172928*cy1*cy7 - 16128*cy1*cy8 + 2511936*cy2*cy2 - 8373120*cy2*cy3 + 8561280*cy2*cy4 - 5475456*cy2*cy5 + 2126208*cy2*cy6 - 454272*cy2*cy7 + 40320*cy2*cy8 + 6852160*cy3*cy3 - 13704320*cy3*cy4 + 8523648*cy3*cy5 - 3192448*cy3*cy6 + 649600*cy3*cy7 - 53760*cy3*cy8 + 6664000*cy4*cy4 - 7996800*cy4*cy5 + 2853760*cy4*cy6 - 542080*cy4*cy7 + 40320*cy4*cy8 + 2286144*cy5*cy5 - 1524096*cy5*cy6 + 260736*cy5*cy7 - 16128*cy5*cy8 + 228928*cy6*cy6 - 65408*cy6*cy7 + 2688*cy6*cy8 + 3136*cy7*cy7,
    -896*cx0*cx0 + 13440*cx0*cx1 - 43904*cx0*cx2 + 81536*cx0*cx3 - 94080*cx0*cx4 + 68992*cx0*cx5 - 31360*cx0*cx6 + 8064*cx0*cx7 - 896*cx0*cx8 - 50176*cx1*cx1 + 326144*cx1*cx2 - 602112*cx1*cx3 + 689920*cx1*cx4 - 501760*cx1*cx5 + 225792*cx1*cx6 - 57344*cx1*cx7 + 6272*cx1*cx8 - 526848*cx2*cx2 + 1931776*cx2*cx3 - 2195200*cx2*cx4 + 1580544*cx2*cx5 - 702464*cx2*cx6 + 175616*cx2*cx7 - 18816*cx2*cx8 - 1756160*cx3*cx3 + 3951360*cx3*cx4 - 2809856*cx3*cx5 + 1229312*cx3*cx6 - 301056*cx3*cx7 + 31360*cx3*cx8 - 2195200*cx4*cx4 + 3073280*cx4*cx5 - 1317120*cx4*cx6 + 313600*cx4*cx7 - 31360*cx4*cx8 - 1053696*cx5*cx5 + 878080*cx5*cx6 - 200704*cx5*cx7 + 18816*cx5*cx8 - 175616*cx6*cx6 + 75264*cx6*cx7 - 6272*cx6*cx8 - 7168*cx7*cx7 + 896*cx7*cx8 - 896*cy0*cy0 + 13440*cy0*cy1 - 43904*cy0*cy2 + 81536*cy0*cy3 - 94080*cy0*cy4 + 68992*cy0*cy5 - 31360*cy0*cy6 + 8064*cy0*cy7 - 896*cy0*cy8 - 50176*cy1*cy1 + 326144*cy1*cy2 - 602112*cy1*cy3 + 689920*cy1*cy4 - 501760*cy1*cy5 + 225792*cy1*cy6 - 57344*cy1*cy7 + 6272*cy1*cy8 - 526848*cy2*cy2 + 1931776*cy2*cy3 - 2195200*cy2*cy4 + 1580544*cy2*cy5 - 702464*cy2*cy6 + 175616*cy2*cy7 - 18816*cy2*cy8 - 1756160*cy3*cy3 + 3951360*cy3*cy4 - 2809856*cy3*cy5 + 1229312*cy3*cy6 - 301056*cy3*cy7 + 31360*cy3*cy8 - 2195200*cy4*cy4 + 3073280*cy4*cy5 - 1317120*cy4*cy6 + 313600*cy4*cy7 - 31360*cy4*cy8 - 1053696*cy5*cy5 + 878080*cy5*cy6 - 200704*cy5*cy7 + 18816*cy5*cy8 - 175616*cy6*cy6 + 75264*cy6*cy7 - 6272*cy6*cy8 - 7168*cy7*cy7 + 896*cy7*cy8,
    64*cx0*cx0 - 1024*cx0*cx1 + 3584*cx0*cx2 - 7168*cx0*cx3 + 8960*cx0*cx4 - 7168*cx0*cx5 + 3584*cx0*cx6 - 1024*cx0*cx7 + 128*cx0*cx8 + 4096*cx1*cx1 - 28672*cx1*cx2 + 57344*cx1*cx3 - 71680*cx1*cx4 + 57344*cx1*cx5 - 28672*cx1*cx6 + 8192*cx1*cx7 - 1024*cx1*cx8 + 50176*cx2*cx2 - 200704*cx2*cx3 + 250880*cx2*cx4 - 200704*cx2*cx5 + 100352*cx2*cx6 - 28672*cx2*cx7 + 3584*cx2*cx8 + 200704*cx3*cx3 - 501760*cx3*cx4 + 401408*cx3*cx5 - 200704*cx3*cx6 + 57344*cx3*cx7 - 7168*cx3*cx8 + 313600*cx4*cx4 - 501760*cx4*cx5 + 250880*cx4*cx6 - 71680*cx4*cx7 + 8960*cx4*cx8 + 200704*cx5*cx5 - 200704*cx5*cx6 + 57344*cx5*cx7 - 7168*cx5*cx8 + 50176*cx6*cx6 - 28672*cx6*cx7 + 3584*cx6*cx8 + 4096*cx7*cx7 - 1024*cx7*cx8 + 64*cx8*cx8 + 64*cy0*cy0 - 1024*cy0*cy1 + 3584*cy0*cy2 - 7168*cy0*cy3 + 8960*cy0*cy4 - 7168*cy0*cy5 + 3584*cy0*cy6 - 1024*cy0*cy7 + 128*cy0*cy8 + 4096*cy1*cy1 - 28672*cy1*cy2 + 57344*cy1*cy3 - 71680*cy1*cy4 + 57344*cy1*cy5 - 28672*cy1*cy6 + 8192*cy1*cy7 - 1024*cy1*cy8 + 50176*cy2*cy2 - 200704*cy2*cy3 + 250880*cy2*cy4 - 200704*cy2*cy5 + 100352*cy2*cy6 - 28672*cy2*cy7 + 3584*cy2*cy8 + 200704*cy3*cy3 - 501760*cy3*cy4 + 401408*cy3*cy5 - 200704*cy3*cy6 + 57344*cy3*cy7 - 7168*cy3*cy8 + 313600*cy4*cy4 - 501760*cy4*cy5 + 250880*cy4*cy6 - 71680*cy4*cy7 + 8960*cy4*cy8 + 200704*cy5*cy5 - 200704*cy5*cy6 + 57344*cy5*cy7 - 7168*cy5*cy8 + 50176*cy6*cy6 - 28672*cy6*cy7 + 3584*cy6*cy8 + 4096*cy7*cy7 - 1024*cy7*cy8 + 64*cy8*cy8
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_9_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3, Scalar cx4, Scalar cy4, Scalar cx5, Scalar cy5, Scalar cx6, Scalar cy6, Scalar cx7, Scalar cy7, Scalar cx8, Scalar cy8, Scalar cx9, Scalar cy9,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 16>::find_real_roots_in_interval({
        81*cx0*cx0 - 162*cx0*cx1 + 81*cx1*cx1 + 81*cy0*cy0 - 162*cy0*cy1 + 81*cy1*cy1,
    -1296*cx0*cx0 + 3888*cx0*cx1 - 1296*cx0*cx2 - 2592*cx1*cx1 + 1296*cx1*cx2 - 1296*cy0*cy0 + 3888*cy0*cy1 - 1296*cy0*cy2 - 2592*cy1*cy1 + 1296*cy1*cy2,
    9720*cx0*cx0 - 38880*cx0*cx1 + 23976*cx0*cx2 - 4536*cx0*cx3 + 34344*cx1*cx1 - 34344*cx1*cx2 + 4536*cx1*cx3 + 5184*cx2*cx2 + 9720*cy0*cy0 - 38880*cy0*cy1 + 23976*cy0*cy2 - 4536*cy0*cy3 + 34344*cy1*cy1 - 34344*cy1*cy2 + 4536*cy1*cy3 + 5184*cy2*cy2,
    -45360*cx0*cx0 + 226800*cx0*cx1 - 199584*cx0*cx2 + 72576*cx0*cx3 - 9072*cx0*cx4 - 254016*cx1*cx1 + 381024*cx1*cx2 - 108864*cx1*cx3 + 9072*cx1*cx4 - 108864*cx2*cx2 + 36288*cx2*cx3 - 45360*cy0*cy0 + 226800*cy0*cy1 - 199584*cy0*cy2 + 72576*cy0*cy3 - 9072*cy0*cy4 - 254016*cy1*cy1 + 381024*cy1*cy2 - 108864*cy1*cy3 + 9072*cy1*cy4 - 108864*cy2*cy2 + 36288*cy2*cy3,
    147420*cx0*cx0 - 884520*cx0*cx1 + 1002456*cx0*cx2 - 530712*cx0*cx3 + 129276*cx0*cx4 - 11340*cx0*cx5 + 1208844*cx1*cx1 - 2417688*cx1*cx2 + 1075032*cx1*cx3 - 201852*cx1*cx4 + 11340*cx1*cx5 + 1006992*cx2*cx2 - 671328*cx2*cx3 + 72576*cx2*cx4 + 63504*cx3*cx3 + 147420*cy0*cy0 - 884520*cy0*cy1 + 1002456*cy0*cy2 - 530712*cy0*cy3 + 129276*cy0*cy4 - 11340*cy0*cy5 + 1208844*cy1*cy1 - 2417688*cy1*cy2 + 1075032*cy1*cy3 - 201852*cy1*cy4 + 11340*cy1*cy5 + 1006992*cy2*cy2 - 671328*cy2*cy3 + 72576*cy2*cy4 + 63504*cy3*cy3,
    -353808*cx0*cx0 + 2476656*cx0*cx1 - 3420144*cx0*cx2 + 2358720*cx0*cx3 - 843696*cx0*cx4 + 145152*cx0*cx5 - 9072*cx0*cx6 - 4009824*cx1*cx1 + 10024560*cx1*cx2 - 6060096*cx1*cx3 + 1805328*cx1*cx4 - 235872*cx1*cx5 + 9072*cx1*cx6 - 5479488*cx2*cx2 + 5479488*cx2*cx3 - 1215648*cx2*cx4 + 90720*cx2*cx5 - 1016064*cx3*cx3 + 254016*cx3*cx4 - 353808*cy0*cy0 + 2476656*cy0*cy1 - 3420144*cy0*cy2 + 2358720*cy0*cy3 - 843696*cy0*cy4 + 145152*cy0*cy5 - 9072*cy0*cy6 - 4009824*cy1*cy1 + 10024560*cy1*cy2 - 6060096*cy1*cy3 + 1805328*cy1*cy4 - 235872*cy1*cy5 + 9072*cy1*cy6 - 5479488*cy2*cy2 + 5479488*cy2*cy3 - 1215648*cy2*cy4 + 90720*cy2*cy5 - 1016064*cy3*cy3 + 254016*cy3*cy4,
    648648*cx0*cx0 - 5189184*cx0*cx1 + 8432424*cx0*cx2 - 7135128*cx0*cx3 + 3343032*cx0*cx4 - 848232*cx0*cx5 + 104328*cx0*cx6 - 4536*cx0*cx7 + 9729720*cx1*cx1 - 29189160*cx1*cx2 + 22303512*cx1*cx3 - 9130968*cx1*cx4 + 1918728*cx1*cx5 - 176904*cx1*cx6 + 4536*cx1*cx7 + 19758816*cx2*cx2 - 26345088*cx2*cx3 + 8899632*cx2*cx4 - 1388016*cx2*cx5 + 72576*cx2*cx6 + 7239456*cx3*cx3 - 3619728*cx3*cx4 + 317520*cx3*cx5 + 254016*cx4*cx4 + 648648*cy0*cy0 - 5189184*cy0*cy1 + 8432424*cy0*cy2 - 7135128*cy0*cy3 + 3343032*cy0*cy4 - 848232*cy0*cy5 + 104328*cy0*cy6 - 4536*cy0*cy7 + 9729720*cy1*cy1 - 29189160*cy1*cy2 + 22303512*cy1*cy3 - 9130968*cy1*cy4 + 1918728*cy1*cy5 - 176904*cy1*cy6 + 4536*cy1*cy7 + 19758816*cy2*cy2 - 26345088*cy2*cy3 + 8899632*cy2*cy4 - 1388016*cy2*cy5 + 72576*cy2*cy6 + 7239456*cy3*cy3 - 3619728*cy3*cy4 + 317520*cy3*cy5 + 254016*cy4*cy4,
    -926640*cx0*cx0 + 8339760*cx0*cx1 - 15567552*cx0*cx2 + 15567552*cx0*cx3 - 8981280*cx0*cx4 + 2993760*cx0*cx5 - 544320*cx0*cx6 + 46656*cx0*cx7 - 1296*cx0*cx8 - 17791488*cx1*cx1 + 62270208*cx1*cx2 - 57480192*cx1*cx3 + 29937600*cx1*cx4 - 8709120*cx1*cx5 + 1306368*cx1*cx6 - 82944*cx1*cx7 + 1296*cx1*cx8 - 50295168*cx2*cx2 + 83825280*cx2*cx3 - 38102400*cx2*cx4 + 9144576*cx2*cx5 - 1016064*cx2*cx6 + 36288*cx2*cx7 - 30481920*cx3*cx3 + 22861440*cx3*cx4 - 4064256*cx3*cx5 + 254016*cx3*cx6 - 3175200*cx4*cx4 + 635040*cx4*cx5 - 926640*cy0*cy0 + 8339760*cy0*cy1 - 15567552*cy0*cy2 + 15567552*cy0*cy3 - 8981280*cy0*cy4 + 2993760*cy0*cy5 - 544320*cy0*cy6 + 46656*cy0*cy7 - 1296*cy0*cy8 - 17791488*cy1*cy1 + 62270208*cy1*cy2 - 57480192*cy1*cy3 + 29937600*cy1*cy4 - 8709120*cy1*cy5 + 1306368*cy1*cy6 - 82944*cy1*cy7 + 1296*cy1*cy8 - 50295168*cy2*cy2 + 83825280*cy2*cy3 - 38102400*cy2*cy4 + 9144576*cy2*cy5 - 1016064*cy2*cy6 + 36288*cy2*cy7 - 30481920*cy3*cy3 + 22861440*cy3*cy4 - 4064256*cy3*cy5 + 254016*cy3*cy6 - 3175200*cy4*cy4 + 635040*cy4*cy5,
    1042470*cx0*cx0 - 10424700*cx0*cx1 + 21961368*cx0*cx2 - 25297272*cx0*cx3 + 17288964*cx0*cx4 - 7110180*cx0*cx5 + 1701000*cx0*cx6 - 215784*cx0*cx7 + 11826*cx0*cx8 - 162*cx0*cx9 + 24949782*cx1*cx1 - 99799128*cx1*cx2 + 107925048*cx1*cx3 - 68182884*cx1*cx4 + 25344900*cx1*cx5 - 5293512*cx1*cx6 + 552744*cx1*cx7 - 22194*cx1*cx8 + 162*cx1*cx9 + 93704688*cx2*cx2 - 187409376*cx2*cx3 + 107094960*cx2*cx4 - 34809264*cx2*cx5 + 6005664*cx2*cx6 - 463968*cx2*cx7 + 10368*cx2*cx8 + 84777840*cx3*cx3 - 84777840*cx3*cx4 + 22797936*cx3*cx5 - 2921184*cx3*cx6 + 127008*cx3*cx7 + 17542980*cx4*cx4 - 7017192*cx4*cx5 + 508032*cx4*cx6 + 396900*cx5*cx5 + 1042470*cy0*cy0 - 10424700*cy0*cy1 + 21961368*cy0*cy2 - 25297272*cy0*cy3 + 17288964*cy0*cy4 - 7110180*cy0*cy5 + 1701000*cy0*cy6 - 215784*cy0*cy7 + 11826*cy0*cy8 - 162*cy0*cy9 + 24949782*cy1*cy1 - 99799128*cy1*cy2 + 107925048*cy1*cy3 - 68182884*cy1*cy4 + 25344900*cy1*cy5 - 5293512*cy1*cy6 + 552744*cy1*cy7 - 22194*cy1*cy8 + 162*cy1*cy9 + 93704688*cy2*cy2 - 187409376*cy2*cy3 + 107094960*cy2*cy4 - 34809264*cy2*cy5 + 6005664*cy2*cy6 - 463968*cy2*cy7 + 10368*cy2*cy8 + 84777840*cy3*cy3 - 84777840*cy3*cy4 + 22797936*cy3*cy5 - 2921184*cy3*cy6 + 127008*cy3*cy7 + 17542980*cy4*cy4 - 7017192*cy4*cy5 + 508032*cy4*cy6 + 396900*cy5*cy5,
    -926640*cx0*cx0 + 10193040*cx0*cx1 - 23907312*cx0*cx2 + 31135104*cx0*cx3 - 24548832*cx0*cx4 + 11975040*cx0*cx5 - 3538080*cx0*cx6 + 590976*cx0*cx7 - 47952*cx0*cx8 + 1296*cx0*cx9 - 27057888*cx1*cx1 + 121760496*cx1*cx2 - 150885504*cx1*cx3 + 111966624*cx1*cx4 - 50621760*cx1*cx5 + 13553568*cx1*cx6 - 1980288*cx1*cx7 + 132192*cx1*cx8 - 2592*cx1*cx9 - 130356864*cx2*cx2 + 304166016*cx2*cx3 - 209345472*cx2*cx4 + 85893696*cx2*cx5 - 20176128*cx2*cx6 + 2441664*cx2*cx7 - 120528*cx2*cx8 + 1296*cx2*cx9 - 164602368*cx3*cx3 + 205752960*cx3*cx4 - 74172672*cx3*cx5 + 14478912*cx3*cx6 - 1306368*cx3*cx7 + 36288*cx3*cx8 - 56518560*cx4*cx4 + 33911136*cx4*cx5 - 4953312*cx4*cx6 + 254016*cx4*cx7 - 3810240*cx5*cx5 + 635040*cx5*cx6 - 926640*cy0*cy0 + 10193040*cy0*cy1 - 23907312*cy0*cy2 + 31135104*cy0*cy3 - 24548832*cy0*cy4 + 11975040*cy0*cy5 - 3538080*cy0*cy6 + 590976*cy0*cy7 - 47952*cy0*cy8 + 1296*cy0*cy9 - 27057888*cy1*cy1 + 121760496*cy1*cy2 - 150885504*cy1*cy3 + 111966624*cy1*cy4 - 50621760*cy1*cy5 + 13553568*cy1*cy6 - 1980288*cy1*cy7 + 132192*cy1*cy8 - 2592*cy1*cy9 - 130356864*cy2*cy2 + 304166016*cy2*cy3 - 209345472*cy2*cy4 + 85893696*cy2*cy5 - 20176128*cy2*cy6 + 2441664*cy2*cy7 - 120528*cy2*cy8 + 1296*cy2*cy9 - 164602368*cy3*cy3 + 205752960*cy3*cy4 - 74172672*cy3*cy5 + 14478912*cy3*cy6 - 1306368*cy3*cy7 + 36288*cy3*cy8 - 56518560*cy4*cy4 + 33911136*cy4*cy5 - 4953312*cy4*cy6 + 254016*cy4*cy7 - 3810240*cy5*cy5 + 635040*cy5*cy6,
    648648*cx0*cx0 - 7783776*cx0*cx1 + 20108088*cx0*cx2 - 29189160*cx0*cx3 + 26045712*cx0*cx4 - 14669424*cx0*cx5 + 5143824*cx0*cx6 - 1061424*cx0*cx7 + 113400*cx0*cx8 - 4536*cx0*cx9 + 22702680*cx1*cx1 - 113513400*cx1*cx2 + 158519592*cx1*cx3 - 135018576*cx1*cx4 + 71823024*cx1*cx5 - 23432976*cx1*cx6 + 4399920*cx1*cx7 - 412776*cx1*cx8 + 13608*cx1*cx9 + 136515456*cx2*cx2 - 364041216*cx2*cx3 + 293007456*cx2*cx4 - 145170144*cx2*cx5 + 43182720*cx2*cx6 - 7148736*cx2*cx7 + 557928*cx2*cx8 - 13608*cx2*cx9 + 229376448*cx3*cx3 - 344064672*cx3*cx4 + 155584800*cx3*cx5 - 40896576*cx3*cx6 + 5660928*cx3*cx7 - 331128*cx3*cx8 + 4536*cx3*cx9 + 117799920*cx4*cx4 - 94239936*cx4*cx5 + 20765808*cx4*cx6 - 2168208*cx4*cx7 + 72576*cx4*cx8 + 15812496*cx5*cx5 - 5270832*cx5*cx6 + 317520*cx5*cx7 + 254016*cx6*cx6 + 648648*cy0*cy0 - 7783776*cy0*cy1 + 20108088*cy0*cy2 - 29189160*cy0*cy3 + 26045712*cy0*cy4 - 14669424*cy0*cy5 + 5143824*cy0*cy6 - 1061424*cy0*cy7 + 113400*cy0*cy8 - 4536*cy0*cy9 + 22702680*cy1*cy1 - 113513400*cy1*cy2 + 158519592*cy1*cy3 - 135018576*cy1*cy4 + 71823024*cy1*cy5 - 23432976*cy1*cy6 + 4399920*cy1*cy7 - 412776*cy1*cy8 + 13608*cy1*cy9 + 136515456*cy2*cy2 - 364041216*cy2*cy3 + 293007456*cy2*cy4 - 145170144*cy2*cy5 + 43182720*cy2*cy6 - 7148736*cy2*cy7 + 557928*cy2*cy8 - 13608*cy2*cy9 + 229376448*cy3*cy3 - 344064672*cy3*cy4 + 155584800*cy3*cy5 - 40896576*cy3*cy6 + 5660928*cy3*cy7 - 331128*cy3*cy8 + 4536*cy3*cy9 + 117799920*cy4*cy4 - 94239936*cy4*cy5 + 20765808*cy4*cy6 - 2168208*cy4*cy7 + 72576*cy4*cy8 + 15812496*cy5*cy5 - 5270832*cy5*cy6 + 317520*cy5*cy7 + 254016*cy6*cy6,
    -353808*cx0*cx0 + 4599504*cx0*cx1 - 12972960*cx0*cx2 + 20756736*cx0*cx3 - 20656944*cx0*cx4 + 13172544*cx0*cx5 - 5334336*cx0*cx6 + 1306368*cx0*cx7 - 172368*cx0*cx8 + 9072*cx0*cx9 - 14624064*cx1*cx1 + 80432352*cx1*cx2 - 124939584*cx1*cx3 + 120049776*cx1*cx4 - 73374336*cx1*cx5 + 28195776*cx1*cx6 - 6459264*cx1*cx7 + 780192*cx1*cx8 - 36288*cx1*cx9 - 107376192*cx2*cx2 + 322128576*cx2*cx3 - 296763264*cx2*cx4 + 172222848*cx2*cx5 - 61979904*cx2*cx6 + 13027392*cx2*cx7 - 1397088*cx2*cx8 + 54432*cx2*cx9 - 231662592*cx3*cx3 + 405409536*cx3*cx4 - 220485888*cx3*cx5 + 72902592*cx3*cx6 - 13644288*cx3*cx7 + 1233792*cx3*cx8 - 36288*cx3*cx9 - 166253472*cx4*cx4 + 166253472*cx4*cx5 - 49025088*cx4*cx6 + 7765632*cx4*cx7 - 535248*cx4*cx8 + 9072*cx4*cx9 - 37086336*cx5*cx5 + 18543168*cx5*cx6 - 2249856*cx5*cx7 + 90720*cx5*cx8 - 1778112*cx6*cx6 + 254016*cx6*cx7 - 353808*cy0*cy0 + 4599504*cy0*cy1 - 12972960*cy0*cy2 + 20756736*cy0*cy3 - 20656944*cy0*cy4 + 13172544*cy0*cy5 - 5334336*cy0*cy6 + 1306368*cy0*cy7 - 172368*cy0*cy8 + 9072*cy0*cy9 - 14624064*cy1*cy1 + 80432352*cy1*cy2 - 124939584*cy1*cy3 + 120049776*cy1*cy4 - 73374336*cy1*cy5 + 28195776*cy1*cy6 - 6459264*cy1*cy7 + 780192*cy1*cy8 - 36288*cy1*cy9 - 107376192*cy2*cy2 + 322128576*cy2*cy3 - 296763264*cy2*cy4 + 172222848*cy2*cy5 - 61979904*cy2*cy6 + 13027392*cy2*cy7 - 1397088*cy2*cy8 + 54432*cy2*cy9 - 231662592*cy3*cy3 + 405409536*cy3*cy4 - 220485888*cy3*cy5 + 72902592*cy3*cy6 - 13644288*cy3*cy7 + 1233792*cy3*cy8 - 36288*cy3*cy9 - 166253472*cy4*cy4 + 166253472*cy4*cy5 - 49025088*cy4*cy6 + 7765632*cy4*cy7 - 535248*cy4*cy8 + 9072*cy4*cy9 - 37086336*cy5*cy5 + 18543168*cy5*cy6 - 2249856*cy5*cy7 + 90720*cy5*cy8 - 1778112*cy6*cy6 + 254016*cy6*cy7,
    147420*cx0*cx0 - 2063880*cx0*cx1 + 6309576*cx0*cx2 - 11027016*cx0*cx3 + 12099780*cx0*cx4 - 8607060*cx0*cx5 + 3946320*cx0*cx6 - 1115856*cx0*cx7 + 174636*cx0*cx8 - 11340*cx0*cx9 + 7105644*cx1*cx1 - 42633864*cx1*cx2 + 72898056*cx1*cx3 - 77962500*cx1*cx4 + 53785620*cx1*cx5 - 23759568*cx1*cx6 + 6413904*cx1*cx7 - 945756*cx1*cx8 + 56700*cx1*cx9 + 62569584*cx2*cx2 - 208565280*cx2*cx3 + 216367200*cx2*cx4 - 143863776*cx2*cx5 + 60709824*cx2*cx6 - 15458688*cx2*cx7 + 2109240*cx2*cx8 - 113400*cx2*cx9 + 168603120*cx3*cx3 - 337206240*cx3*cx4 + 214262496*cx3*cx5 - 85349376*cx3*cx6 + 20139840*cx3*cx7 - 2472120*cx3*cx8 + 113400*cx3*cx9 + 161141400*cx4*cx4 - 193369680*cx4*cx5 + 71442000*cx4*cx6 - 15195600*cx4*cx7 + 1598940*cx4*cx8 - 56700*cx4*cx9 + 53819640*cx5*cx5 - 35879760*cx5*cx6 + 6559056*cx5*cx7 - 537516*cx5*cx8 + 11340*cx5*cx9 + 5143824*cx6*cx6 - 1469664*cx6*cx7 + 72576*cx6*cx8 + 63504*cx7*cx7 + 147420*cy0*cy0 - 2063880*cy0*cy1 + 6309576*cy0*cy2 - 11027016*cy0*cy3 + 12099780*cy0*cy4 - 8607060*cy0*cy5 + 3946320*cy0*cy6 - 1115856*cy0*cy7 + 174636*cy0*cy8 - 11340*cy0*cy9 + 7105644*cy1*cy1 - 42633864*cy1*cy2 + 72898056*cy1*cy3 - 77962500*cy1*cy4 + 53785620*cy1*cy5 - 23759568*cy1*cy6 + 6413904*cy1*cy7 - 945756*cy1*cy8 + 56700*cy1*cy9 + 62569584*cy2*cy2 - 208565280*cy2*cy3 + 216367200*cy2*cy4 - 143863776*cy2*cy5 + 60709824*cy2*cy6 - 15458688*cy2*cy7 + 2109240*cy2*cy8 - 113400*cy2*cy9 + 168603120*cy3*cy3 - 337206240*cy3*cy4 + 214262496*cy3*cy5 - 85349376*cy3*cy6 + 20139840*cy3*cy7 - 2472120*cy3*cy8 + 113400*cy3*cy9 + 161141400*cy4*cy4 - 193369680*cy4*cy5 + 71442000*cy4*cy6 - 15195600*cy4*cy7 + 1598940*cy4*cy8 - 56700*cy4*cy9 + 53819640*cy5*cy5 - 35879760*cy5*cy6 + 6559056*cy5*cy7 - 537516*cy5*cy8 + 11340*cy5*cy9 + 5143824*cy6*cy6 - 1469664*cy6*cy7 + 72576*cy6*cy8 + 63504*cy7*cy7,
    -45360*cx0*cx0 + 680400*cx0*cx1 - 2240784*cx0*cx2 + 4245696*cx0*cx3 - 5089392*cx0*cx4 + 3991680*cx0*cx5 - 2041200*cx0*cx6 + 653184*cx0*cx7 - 117936*cx0*cx8 + 9072*cx0*cx9 - 2522016*cx1*cx1 + 16393104*cx1*cx2 - 30590784*cx1*cx3 + 36024912*cx1*cx4 - 27669600*cx1*cx5 + 13798512*cx1*cx6 - 4281984*cx1*cx7 + 743904*cx1*cx8 - 54432*cx1*cx9 - 26236224*cx2*cx2 + 96199488*cx2*cx3 - 110950560*cx2*cx4 + 83117664*cx2*cx5 - 40207104*cx2*cx6 + 12011328*cx2*cx7 - 1986768*cx2*cx8 + 136080*cx2*cx9 - 86365440*cx3*cx3 + 194322240*cx3*cx4 - 141232896*cx3*cx5 + 65790144*cx3*cx6 - 18724608*cx3*cx7 + 2903040*cx3*cx8 - 181440*cx3*cx9 - 106051680*cx4*cx4 + 148472352*cx4*cx5 - 65917152*cx4*cx6 + 17599680*cx4*cx7 - 2494800*cx4*cx8 + 136080*cx4*cx9 - 49533120*cx5*cx5 + 41277600*cx5*cx6 - 10088064*cx5*cx7 + 1251936*cx5*cx8 - 54432*cx5*cx9 - 7874496*cx6*cx6 + 3374784*cx6*cx7 - 335664*cx6*cx8 + 9072*cx6*cx9 - 290304*cx7*cx7 + 36288*cx7*cx8 - 45360*cy0*cy0 + 680400*cy0*cy1 - 2240784*cy0*cy2 + 4245696*cy0*cy3 - 5089392*cy0*cy4 + 3991680*cy0*cy5 - 2041200*cy0*cy6 + 653184*cy0*cy7 - 117936*cy0*cy8 + 9072*cy0*cy9 - 2522016*cy1*cy1 + 16393104*cy1*cy2 - 30590784*cy1*cy3 + 36024912*cy1*cy4 - 27669600*cy1*cy5 + 13798512*cy1*cy6 - 4281984*cy1*cy7 + 743904*cy1*cy8 - 54432*cy1*cy9 - 26236224*cy2*cy2 + 96199488*cy2*cy3 - 110950560*cy2*cy4 + 83117664*cy2*cy5 - 40207104*cy2*cy6 + 12011328*cy2*cy7 - 1986768*cy2*cy8 + 136080*cy2*cy9 - 86365440*cy3*cy3 + 194322240*cy3*cy4 - 141232896*cy3*cy5 + 65790144*cy3*cy6 - 18724608*cy3*cy7 + 2903040*cy3*cy8 - 181440*cy3*cy9 - 106051680*cy4*cy4 + 148472352*cy4*cy5 - 65917152*cy4*cy6 + 17599680*cy4*cy7 - 2494800*cy4*cy8 + 136080*cy4*cy9 - 49533120*cy5*cy5 + 41277600*cy5*cy6 - 10088064*cy5*cy7 + 1251936*cy5*cy8 - 54432*cy5*cy9 - 7874496*cy6*cy6 + 3374784*cy6*cy7 - 335664*cy6*cy8 + 9072*cy6*cy9 - 290304*cy7*cy7 + 36288*cy7*cy8,
    9720*cx0*cx0 - 155520*cx0*cx1 + 548856*cx0*cx2 - 1120392*cx0*cx3 + 1456056*cx0*cx4 - 1247400*cx0*cx5 + 703080*cx0*cx6 - 250776*cx0*cx7 + 51192*cx0*cx8 - 4536*cx0*cx9 + 617544*cx1*cx1 - 4322808*cx1*cx2 + 8740872*cx1*cx3 - 11235672*cx1*cx4 + 9502920*cx1*cx5 - 5275368*cx1*cx6 + 1847448*cx1*cx7 - 368712*cx1*cx8 + 31752*cx1*cx9 + 7493472*cx2*cx2 - 29973888*cx2*cx3 + 38038896*cx2*cx4 - 31688496*cx2*cx5 + 17273088*cx2*cx6 - 5914944*cx2*cx7 + 1147608*cx2*cx8 - 95256*cx2*cx9 + 29592864*cx3*cx3 - 73982160*cx3*cx4 + 60519312*cx3*cx5 - 32260032*cx3*cx6 + 10741248*cx3*cx7 - 2009448*cx3*cx8 + 158760*cx3*cx9 + 45405360*cx4*cx4 - 72648576*cx4*cx5 + 37657872*cx4*cx6 - 12092976*cx4*cx7 + 2154600*cx4*cx8 - 158760*cx4*cx9 + 28259280*cx5*cx5 - 28259280*cx5*cx6 + 8645616*cx5*cx7 - 1437912*cx5*cx8 + 95256*cx5*cx9 + 6731424*cx6*cx6 - 3846528*cx6*cx7 + 576072*cx6*cx8 - 31752*cx6*cx9 + 495072*cx7*cx7 - 123768*cx7*cx8 + 4536*cx7*cx9 + 5184*cx8*cx8 + 9720*cy0*cy0 - 155520*cy0*cy1 + 548856*cy0*cy2 - 1120392*cy0*cy3 + 1456056*cy0*cy4 - 1247400*cy0*cy5 + 703080*cy0*cy6 - 250776*cy0*cy7 + 51192*cy0*cy8 - 4536*cy0*cy9 + 617544*cy1*cy1 - 4322808*cy1*cy2 + 8740872*cy1*cy3 - 11235672*cy1*cy4 + 9502920*cy1*cy5 - 5275368*cy1*cy6 + 1847448*cy1*cy7 - 368712*cy1*cy8 + 31752*cy1*cy9 + 7493472*cy2*cy2 - 29973888*cy2*cy3 + 38038896*cy2*cy4 - 31688496*cy2*cy5 + 17273088*cy2*cy6 - 5914944*cy2*cy7 + 1147608*cy2*cy8 - 95256*cy2*cy9 + 29592864*cy3*cy3 - 73982160*cy3*cy4 + 60519312*cy3*cy5 - 32260032*cy3*cy6 + 10741248*cy3*cy7 - 2009448*cy3*cy8 + 158760*cy3*cy9 + 45405360*cy4*cy4 - 72648576*cy4*cy5 + 37657872*cy4*cy6 - 12092976*cy4*cy7 + 2154600*cy4*cy8 - 158760*cy4*cy9 + 28259280*cy5*cy5 - 28259280*cy5*cy6 + 8645616*cy5*cy7 - 1437912*cy5*cy8 + 95256*cy5*cy9 + 6731424*cy6*cy6 - 3846528*cy6*cy7 + 576072*cy6*cy8 - 31752*cy6*cy9 + 495072*cy7*cy7 - 123768*cy7*cy8 + 4536*cy7*cy9 + 5184*cy8*cy8,
    -1296*cx0*cx0 + 22032*cx0*cx1 - 82944*cx0*cx2 + 181440*cx0*cx3 - 254016*cx0*cx4 + 235872*cx0*cx5 - 145152*cx0*cx6 + 57024*cx0*cx7 - 12960*cx0*cx8 + 1296*cx0*cx9 - 93312*cx1*cx1 + 699840*cx1*cx2 - 1524096*cx1*cx3 + 2122848*cx1*cx4 - 1959552*cx1*cx5 + 1197504*cx1*cx6 - 466560*cx1*cx7 + 104976*cx1*cx8 - 10368*cx1*cx9 - 1306368*cx2*cx2 + 5660928*cx2*cx3 - 7838208*cx2*cx4 + 7185024*cx2*cx5 - 4354560*cx2*cx6 + 1679616*cx2*cx7 - 373248*cx2*cx8 + 36288*cx2*cx9 - 6096384*cx3*cx3 + 16765056*cx3*cx4 - 15240960*cx3*cx5 + 9144576*cx3*cx6 - 3483648*cx3*cx7 + 762048*cx3*cx8 - 72576*cx3*cx9 - 11430720*cx4*cx4 + 20575296*cx4*cx5 - 12192768*cx4*cx6 + 4572288*cx4*cx7 - 979776*cx4*cx8 + 90720*cx4*cx9 - 9144576*cx5*cx5 + 10668672*cx5*cx6 - 3919104*cx5*cx7 + 816480*cx5*cx8 - 72576*cx5*cx9 - 3048192*cx6*cx6 + 2177280*cx6*cx7 - 435456*cx6*cx8 + 36288*cx6*cx9 - 373248*cx7*cx7 + 139968*cx7*cx8 - 10368*cx7*cx9 - 11664*cx8*cx8 + 1296*cx8*cx9 - 1296*cy0*cy0 + 22032*cy0*cy1 - 82944*cy0*cy2 + 181440*cy0*cy3 - 254016*cy0*cy4 + 235872*cy0*cy5 - 145152*cy0*cy6 + 57024*cy0*cy7 - 12960*cy0*cy8 + 1296*cy0*cy9 - 93312*cy1*cy1 + 699840*cy1*cy2 - 1524096*cy1*cy3 + 2122848*cy1*cy4 - 1959552*cy1*cy5 + 1197504*cy1*cy6 - 466560*cy1*cy7 + 104976*cy1*cy8 - 10368*cy1*cy9 - 1306368*cy2*cy2 + 5660928*cy2*cy3 - 7838208*cy2*cy4 + 7185024*cy2*cy5 - 4354560*cy2*cy6 + 1679616*cy2*cy7 - 373248*cy2*cy8 + 36288*cy2*cy9 - 6096384*cy3*cy3 + 16765056*cy3*cy4 - 15240960*cy3*cy5 + 9144576*cy3*cy6 - 3483648*cy3*cy7 + 762048*cy3*cy8 - 72576*cy3*cy9 - 11430720*cy4*cy4 + 20575296*cy4*cy5 - 12192768*cy4*cy6 + 4572288*cy4*cy7 - 979776*cy4*cy8 + 90720*cy4*cy9 - 9144576*cy5*cy5 + 10668672*cy5*cy6 - 3919104*cy5*cy7 + 816480*cy5*cy8 - 72576*cy5*cy9 - 3048192*cy6*cy6 + 2177280*cy6*cy7 - 435456*cy6*cy8 + 36288*cy6*cy9 - 373248*cy7*cy7 + 139968*cy7*cy8 - 10368*cy7*cy9 - 11664*cy8*cy8 + 1296*cy8*cy9,
    81*cx0*cx0 - 1458*cx0*cx1 + 5832*cx0*cx2 - 13608*cx0*cx3 + 20412*cx0*cx4 - 20412*cx0*cx5 + 13608*cx0*cx6 - 5832*cx0*cx7 + 1458*cx0*cx8 - 162*cx0*cx9 + 6561*cx1*cx1 - 52488*cx1*cx2 + 122472*cx1*cx3 - 183708*cx1*cx4 + 183708*cx1*cx5 - 122472*cx1*cx6 + 52488*cx1*cx7 - 13122*cx1*cx8 + 1458*cx1*cx9 + 104976*cx2*cx2 - 489888*cx2*cx3 + 734832*cx2*cx4 - 734832*cx2*cx5 + 489888*cx2*cx6 - 209952*cx2*cx7 + 52488*cx2*cx8 - 5832*cx2*cx9 + 571536*cx3*cx3 - 1714608*cx3*cx4 + 1714608*cx3*cx5 - 1143072*cx3*cx6 + 489888*cx3*cx7 - 122472*cx3*cx8 + 13608*cx3*cx9 + 1285956*cx4*cx4 - 2571912*cx4*cx5 + 1714608*cx4*cx6 - 734832*cx4*cx7 + 183708*cx4*cx8 - 20412*cx4*cx9 + 1285956*cx5*cx5 - 1714608*cx5*cx6 + 734832*cx5*cx7 - 183708*cx5*cx8 + 20412*cx5*cx9 + 571536*cx6*cx6 - 489888*cx6*cx7 + 122472*cx6*cx8 - 13608*cx6*cx9 + 104976*cx7*cx7 - 52488*cx7*cx8 + 5832*cx7*cx9 + 6561*cx8*cx8 - 1458*cx8*cx9 + 81*cx9*cx9 + 81*cy0*cy0 - 1458*cy0*cy1 + 5832*cy0*cy2 - 13608*cy0*cy3 + 20412*cy0*cy4 - 20412*cy0*cy5 + 13608*cy0*cy6 - 5832*cy0*cy7 + 1458*cy0*cy8 - 162*cy0*cy9 + 6561*cy1*cy1 - 52488*cy1*cy2 + 122472*cy1*cy3 - 183708*cy1*cy4 + 183708*cy1*cy5 - 122472*cy1*cy6 + 52488*cy1*cy7 - 13122*cy1*cy8 + 1458*cy1*cy9 + 104976*cy2*cy2 - 489888*cy2*cy3 + 734832*cy2*cy4 - 734832*cy2*cy5 + 489888*cy2*cy6 - 209952*cy2*cy7 + 52488*cy2*cy8 - 5832*cy2*cy9 + 571536*cy3*cy3 - 1714608*cy3*cy4 + 1714608*cy3*cy5 - 1143072*cy3*cy6 + 489888*cy3*cy7 - 122472*cy3*cy8 + 13608*cy3*cy9 + 1285956*cy4*cy4 - 2571912*cy4*cy5 + 1714608*cy4*cy6 - 734832*cy4*cy7 + 183708*cy4*cy8 - 20412*cy4*cy9 + 1285956*cy5*cy5 - 1714608*cy5*cy6 + 734832*cy5*cy7 - 183708*cy5*cy8 + 20412*cy5*cy9 + 571536*cy6*cy6 - 489888*cy6*cy7 + 122472*cy6*cy8 - 13608*cy6*cy9 + 104976*cy7*cy7 - 52488*cy7*cy8 + 5832*cy7*cy9 + 6561*cy8*cy8 - 1458*cy8*cy9 + 81*cy9*cy9
    },
    result, t0, t1, tol);

    return result;
}


template<typename Scalar>
std::vector<Scalar> compute_Bezier_degree_10_singularities(
        Scalar cx0, Scalar cy0, Scalar cx1, Scalar cy1, Scalar cx2, Scalar cy2, Scalar cx3, Scalar cy3, Scalar cx4, Scalar cy4, Scalar cx5, Scalar cy5, Scalar cx6, Scalar cy6, Scalar cx7, Scalar cy7, Scalar cx8, Scalar cy8, Scalar cx9, Scalar cy9, Scalar cx10, Scalar cy10,
        Scalar t0 = 0,
        Scalar t1 = 1) {
    std::vector<Scalar> result;
    constexpr Scalar tol = static_cast<Scalar>(1e-8);

    PolynomialRootFinder<Scalar, 18>::find_real_roots_in_interval({
        100*cx0*cx0 - 200*cx0*cx1 + 100*cx1*cx1 + 100*cy0*cy0 - 200*cy0*cy1 + 100*cy1*cy1,
    -1800*cx0*cx0 + 5400*cx0*cx1 - 1800*cx0*cx2 - 3600*cx1*cx1 + 1800*cx1*cx2 - 1800*cy0*cy0 + 5400*cy0*cy1 - 1800*cy0*cy2 - 3600*cy1*cy1 + 1800*cy1*cy2,
    15300*cx0*cx0 - 61200*cx0*cx1 + 37800*cx0*cx2 - 7200*cx0*cx3 + 54000*cx1*cx1 - 54000*cx1*cx2 + 7200*cx1*cx3 + 8100*cx2*cx2 + 15300*cy0*cy0 - 61200*cy0*cy1 + 37800*cy0*cy2 - 7200*cy0*cy3 + 54000*cy1*cy1 - 54000*cy1*cy2 + 7200*cy1*cy3 + 8100*cy2*cy2,
    -81600*cx0*cx0 + 408000*cx0*cx1 - 360000*cx0*cx2 + 132000*cx0*cx3 - 16800*cx0*cx4 - 456000*cx1*cx1 + 684000*cx1*cx2 - 196800*cx1*cx3 + 16800*cx1*cx4 - 194400*cx2*cx2 + 64800*cx2*cx3 - 81600*cy0*cy0 + 408000*cy0*cy1 - 360000*cy0*cy2 + 132000*cy0*cy3 - 16800*cy0*cy4 - 456000*cy1*cy1 + 684000*cy1*cy2 - 196800*cy1*cy3 + 16800*cy1*cy4 - 194400*cy2*cy2 + 64800*cy2*cy3,
    306000*cx0*cx0 - 1836000*cx0*cx1 + 2088000*cx0*cx2 - 1116000*cx0*cx3 + 277200*cx0*cx4 - 25200*cx0*cx5 + 2502000*cx1*cx1 - 5004000*cx1*cx2 + 2239200*cx1*cx3 - 428400*cx1*cx4 + 25200*cx1*cx5 + 2073600*cx2*cx2 - 1382400*cx2*cx3 + 151200*cx2*cx4 + 129600*cx3*cx3 + 306000*cy0*cy0 - 1836000*cy0*cy1 + 2088000*cy0*cy2 - 1116000*cy0*cy3 + 277200*cy0*cy4 - 25200*cy0*cy5 + 2502000*cy1*cy1 - 5004000*cy1*cy2 + 2239200*cy1*cy3 - 428400*cy1*cy4 + 25200*cy1*cy5 + 2073600*cy2*cy2 - 1382400*cy2*cy3 + 151200*cy2*cy4 + 129600*cy3*cy3,
    -856800*cx0*cx0 + 5997600*cx0*cx1 - 8316000*cx0*cx2 + 5796000*cx0*cx3 - 2116800*cx0*cx4 + 378000*cx0*cx5 - 25200*cx0*cx6 - 9676800*cx1*cx1 + 24192000*cx1*cx2 - 14716800*cx1*cx3 + 4460400*cx1*cx4 - 604800*cx1*cx5 + 25200*cx1*cx6 - 13154400*cx2*cx2 + 13154400*cx2*cx3 - 2948400*cx2*cx4 + 226800*cx2*cx5 - 2419200*cx3*cx3 + 604800*cx3*cx4 - 856800*cy0*cy0 + 5997600*cy0*cy1 - 8316000*cy0*cy2 + 5796000*cy0*cy3 - 2116800*cy0*cy4 + 378000*cy0*cy5 - 25200*cy0*cy6 - 9676800*cy1*cy1 + 24192000*cy1*cy2 - 14716800*cy1*cy3 + 4460400*cy1*cy4 - 604800*cy1*cy5 + 25200*cy1*cy6 - 13154400*cy2*cy2 + 13154400*cy2*cy3 - 2948400*cy2*cy4 + 226800*cy2*cy5 - 2419200*cy3*cy3 + 604800*cy3*cy4,
    1856400*cx0*cx0 - 14851200*cx0*cx1 + 24242400*cx0*cx2 - 20748000*cx0*cx3 + 9937200*cx0*cx4 - 2620800*cx0*cx5 + 344400*cx0*cx6 - 16800*cx0*cx7 + 27736800*cx1*cx1 - 83210400*cx1*cx2 + 63991200*cx1*cx3 - 26644800*cx1*cx4 + 5796000*cx1*cx5 - 571200*cx1*cx6 + 16800*cx1*cx7 + 56019600*cx2*cx2 - 74692800*cx2*cx3 + 25477200*cx2*cx4 - 4082400*cx2*cx5 + 226800*cx2*cx6 + 20361600*cx3*cx3 - 10180800*cx3*cx4 + 907200*cx3*cx5 + 705600*cx4*cx4 + 1856400*cy0*cy0 - 14851200*cy0*cy1 + 24242400*cy0*cy2 - 20748000*cy0*cy3 + 9937200*cy0*cy4 - 2620800*cy0*cy5 + 344400*cy0*cy6 - 16800*cy0*cy7 + 27736800*cy1*cy1 - 83210400*cy1*cy2 + 63991200*cy1*cy3 - 26644800*cy1*cy4 + 5796000*cy1*cy5 - 571200*cy1*cy6 + 16800*cy1*cy7 + 56019600*cy2*cy2 - 74692800*cy2*cy3 + 25477200*cy2*cy4 - 4082400*cy2*cy5 + 226800*cy2*cy6 + 20361600*cy3*cy3 - 10180800*cy3*cy4 + 907200*cy3*cy5 + 705600*cy4*cy4,
    -3182400*cx0*cx0 + 28641600*cx0*cx1 - 53726400*cx0*cx2 + 54381600*cx0*cx3 - 32104800*cx0*cx4 + 11138400*cx0*cx5 - 2167200*cx0*cx6 + 208800*cx0*cx7 - 7200*cx0*cx8 - 60840000*cx1*cx1 + 212940000*cx1*cx2 - 197870400*cx1*cx3 + 104832000*cx1*cx4 - 31550400*cx1*cx5 + 5040000*cx1*cx6 - 360000*cx1*cx7 + 7200*cx1*cx8 - 171007200*cx2*cx2 + 285012000*cx2*cx3 - 130788000*cx2*cx4 + 32205600*cx2*cx5 - 3780000*cx2*cx6 + 151200*cx2*cx7 - 102816000*cx3*cx3 + 77112000*cx3*cx4 - 13910400*cx3*cx5 + 907200*cx3*cx6 - 10584000*cx4*cx4 + 2116800*cx4*cx5 - 3182400*cy0*cy0 + 28641600*cy0*cy1 - 53726400*cy0*cy2 + 54381600*cy0*cy3 - 32104800*cy0*cy4 + 11138400*cy0*cy5 - 2167200*cy0*cy6 + 208800*cy0*cy7 - 7200*cy0*cy8 - 60840000*cy1*cy1 + 212940000*cy1*cy2 - 197870400*cy1*cy3 + 104832000*cy1*cy4 - 31550400*cy1*cy5 + 5040000*cy1*cy6 - 360000*cy1*cy7 + 7200*cy1*cy8 - 171007200*cy2*cy2 + 285012000*cy2*cy3 - 130788000*cy2*cy4 + 32205600*cy2*cy5 - 3780000*cy2*cy6 + 151200*cy2*cy7 - 102816000*cy3*cy3 + 77112000*cy3*cy4 - 13910400*cy3*cy5 + 907200*cy3*cy6 - 10584000*cy4*cy4 + 2116800*cy4*cy5,
    4375800*cx0*cx0 - 43758000*cx0*cx1 + 92664000*cx0*cx2 - 108108000*cx0*cx3 + 75675600*cx0*cx4 - 32432400*cx0*cx5 + 8316000*cx0*cx6 - 1188000*cx0*cx7 + 81000*cx0*cx8 - 1800*cx0*cx9 + 104247000*cx1*cx1 - 416988000*cx1*cx2 + 454053600*cx1*cx3 - 291891600*cx1*cx4 + 112266000*cx1*cx5 - 24948000*cx1*cx6 + 2916000*cx1*cx7 - 145800*cx1*cx8 + 1800*cx1*cx9 + 389188800*cx2*cx2 - 778377600*cx2*cx3 + 449064000*cx2*cx4 - 149688000*cx2*cx5 + 27216000*cx2*cx6 - 2332800*cx2*cx7 + 64800*cx2*cx8 + 349272000*cx3*cx3 - 349272000*cx3*cx4 + 95256000*cx3*cx5 - 12700800*cx3*cx6 + 604800*cx3*cx7 + 71442000*cx4*cx4 - 28576800*cx4*cx5 + 2116800*cx4*cx6 + 1587600*cx5*cx5 + 4375800*cy0*cy0 - 43758000*cy0*cy1 + 92664000*cy0*cy2 - 108108000*cy0*cy3 + 75675600*cy0*cy4 - 32432400*cy0*cy5 + 8316000*cy0*cy6 - 1188000*cy0*cy7 + 81000*cy0*cy8 - 1800*cy0*cy9 + 104247000*cy1*cy1 - 416988000*cy1*cy2 + 454053600*cy1*cy3 - 291891600*cy1*cy4 + 112266000*cy1*cy5 - 24948000*cy1*cy6 + 2916000*cy1*cy7 - 145800*cy1*cy8 + 1800*cy1*cy9 + 389188800*cy2*cy2 - 778377600*cy2*cy3 + 449064000*cy2*cy4 - 149688000*cy2*cy5 + 27216000*cy2*cy6 - 2332800*cy2*cy7 + 64800*cy2*cy8 + 349272000*cy3*cy3 - 349272000*cy3*cy4 + 95256000*cy3*cy5 - 12700800*cy3*cy6 + 604800*cy3*cy7 + 71442000*cy4*cy4 - 28576800*cy4*cy5 + 2116800*cy4*cy6 + 1587600*cy5*cy5,
    -4862000*cx0*cx0 + 53482000*cx0*cx1 - 200*cx0*cx10 - 126126000*cx0*cx2 + 166452000*cx0*cx3 - 134534400*cx0*cx4 + 68468400*cx0*cx5 - 21714000*cx0*cx6 + 4092000*cx0*cx7 - 414000*cx0*cx8 + 18200*cx0*cx9 - 141284000*cx1*cx1 + 200*cx1*cx10 + 635778000*cx1*cx2 - 793478400*cx1*cx3 + 599398800*cx1*cx4 - 280526400*cx1*cx5 + 79926000*cx1*cx6 - 13056000*cx1*cx7 + 1078200*cx1*cx8 - 34400*cx1*cx9 - 676447200*cx2*cx2 + 1578376800*cx2*cx3 - 1096880400*cx2*cx4 + 461538000*cx2*cx5 - 114156000*cx2*cx6 + 15271200*cx2*cx7 - 923400*cx2*cx8 + 16200*cx2*cx9 - 847123200*cx3*cx3 + 1058904000*cx3*cx4 - 387072000*cx3*cx5 + 78523200*cx3*cx6 - 7718400*cx3*cx7 + 259200*cx3*cx8 - 287532000*cx4*cx4 + 172519200*cx4*cx5 - 25754400*cx4*cx6 + 1411200*cx4*cx7 - 19051200*cx5*cx5 + 3175200*cx5*cx6 - 4862000*cy0*cy0 + 53482000*cy0*cy1 - 200*cy0*cy10 - 126126000*cy0*cy2 + 166452000*cy0*cy3 - 134534400*cy0*cy4 + 68468400*cy0*cy5 - 21714000*cy0*cy6 + 4092000*cy0*cy7 - 414000*cy0*cy8 + 18200*cy0*cy9 - 141284000*cy1*cy1 + 200*cy1*cy10 + 635778000*cy1*cy2 - 793478400*cy1*cy3 + 599398800*cy1*cy4 - 280526400*cy1*cy5 + 79926000*cy1*cy6 - 13056000*cy1*cy7 + 1078200*cy1*cy8 - 34400*cy1*cy9 - 676447200*cy2*cy2 + 1578376800*cy2*cy3 - 1096880400*cy2*cy4 + 461538000*cy2*cy5 - 114156000*cy2*cy6 + 15271200*cy2*cy7 - 923400*cy2*cy8 + 16200*cy2*cy9 - 847123200*cy3*cy3 + 1058904000*cy3*cy4 - 387072000*cy3*cy5 + 78523200*cy3*cy6 - 7718400*cy3*cy7 + 259200*cy3*cy8 - 287532000*cy4*cy4 + 172519200*cy4*cy5 - 25754400*cy4*cy6 + 1411200*cy4*cy7 - 19051200*cy5*cy5 + 3175200*cy5*cy6,
    4375800*cx0*cx0 - 52509600*cx0*cx1 + 1800*cx0*cx10 + 136422000*cx0*cx2 - 200772000*cx0*cx3 + 183783600*cx0*cx4 - 108108000*cx0*cx5 + 40748400*cx0*cx6 - 9504000*cx0*cx7 + 1269000*cx0*cx8 - 82800*cx0*cx9 + 152380800*cx1*cx1 - 3600*cx1*cx10 - 761904000*cx1*cx2 + 1071813600*cx1*cx3 - 929728800*cx1*cx4 + 512265600*cx1*cx5 - 177962400*cx1*cx6 + 37368000*cx1*cx7 - 4330800*cx1*cx8 + 230400*cx1*cx9 + 1800*cx10*cx2 + 910423800*cx2*cx2 - 2427796800*cx2*cx3 + 1973386800*cx2*cx4 - 1002909600*cx2*cx5 + 314118000*cx2*cx6 - 57412800*cx2*cx7 + 5459400*cx2*cx8 - 212400*cx2*cx9 + 1516838400*cx3*cx3 - 2275257600*cx3*cx4 + 1043280000*cx3*cx5 - 284860800*cx3*cx6 + 42854400*cx3*cx7 - 3002400*cx3*cx8 + 64800*cx3*cx9 + 769986000*cx4*cx4 - 615988800*cx4*cx5 + 138650400*cx4*cx6 - 15422400*cx4*cx7 + 604800*cx4*cx8 + 101606400*cx5*cx5 - 33868800*cx5*cx6 + 2116800*cx5*cx7 + 1587600*cx6*cx6 + 4375800*cy0*cy0 - 52509600*cy0*cy1 + 1800*cy0*cy10 + 136422000*cy0*cy2 - 200772000*cy0*cy3 + 183783600*cy0*cy4 - 108108000*cy0*cy5 + 40748400*cy0*cy6 - 9504000*cy0*cy7 + 1269000*cy0*cy8 - 82800*cy0*cy9 + 152380800*cy1*cy1 - 3600*cy1*cy10 - 761904000*cy1*cy2 + 1071813600*cy1*cy3 - 929728800*cy1*cy4 + 512265600*cy1*cy5 - 177962400*cy1*cy6 + 37368000*cy1*cy7 - 4330800*cy1*cy8 + 230400*cy1*cy9 + 1800*cy10*cy2 + 910423800*cy2*cy2 - 2427796800*cy2*cy3 + 1973386800*cy2*cy4 - 1002909600*cy2*cy5 + 314118000*cy2*cy6 - 57412800*cy2*cy7 + 5459400*cy2*cy8 - 212400*cy2*cy9 + 1516838400*cy3*cy3 - 2275257600*cy3*cy4 + 1043280000*cy3*cy5 - 284860800*cy3*cy6 + 42854400*cy3*cy7 - 3002400*cy3*cy8 + 64800*cy3*cy9 + 769986000*cy4*cy4 - 615988800*cy4*cy5 + 138650400*cy4*cy6 - 15422400*cy4*cy7 + 604800*cy4*cy8 + 101606400*cy5*cy5 - 33868800*cy5*cy6 + 2116800*cy5*cy7 + 1587600*cy6*cy6,
    -3182400*cx0*cx0 + 41371200*cx0*cx1 - 7200*cx0*cx10 - 117374400*cx0*cx2 + 190476000*cx0*cx3 - 194594400*cx0*cx4 + 129729600*cx0*cx5 - 56548800*cx0*cx6 + 15681600*cx0*cx7 - 2592000*cx0*cx8 + 223200*cx0*cx9 - 130852800*cx1*cx1 + 21600*cx1*cx10 + 719690400*cx1*cx2 - 1126382400*cx1*cx3 + 1102701600*cx1*cx4 - 698544000*cx1*cx5 + 286070400*cx1*cx6 - 73353600*cx1*cx7 + 10951200*cx1*cx8 - 820800*cx1*cx9 - 21600*cx10*cx2 + 7200*cx10*cx3 - 954439200*cx2*cx2 + 2863317600*cx2*cx3 - 2664446400*cx2*cx4 + 1586692800*cx2*cx5 - 601473600*cx2*cx6 + 139579200*cx2*cx7 - 18208800*cx2*cx8 + 1123200*cx2*cx9 - 2041459200*cx3*cx3 + 3572553600*cx3*cx4 - 1970438400*cx3*cx5 + 676771200*cx3*cx6 - 137548800*cx3*cx7 + 14839200*cx3*cx8 - 676800*cx3*cx9 - 1447891200*cx4*cx4 + 1447891200*cx4*cx5 - 436060800*cx4*cx6 + 73483200*cx4*cx7 - 5896800*cx4*cx8 + 151200*cx4*cx9 - 317520000*cx5*cx5 + 158760000*cx5*cx6 - 19958400*cx5*cx7 + 907200*cx5*cx8 - 14817600*cx6*cx6 + 2116800*cx6*cx7 - 3182400*cy0*cy0 + 41371200*cy0*cy1 - 7200*cy0*cy10 - 117374400*cy0*cy2 + 190476000*cy0*cy3 - 194594400*cy0*cy4 + 129729600*cy0*cy5 - 56548800*cy0*cy6 + 15681600*cy0*cy7 - 2592000*cy0*cy8 + 223200*cy0*cy9 - 130852800*cy1*cy1 + 21600*cy1*cy10 + 719690400*cy1*cy2 - 1126382400*cy1*cy3 + 1102701600*cy1*cy4 - 698544000*cy1*cy5 + 286070400*cy1*cy6 - 73353600*cy1*cy7 + 10951200*cy1*cy8 - 820800*cy1*cy9 - 21600*cy10*cy2 + 7200*cy10*cy3 - 954439200*cy2*cy2 + 2863317600*cy2*cy3 - 2664446400*cy2*cy4 + 1586692800*cy2*cy5 - 601473600*cy2*cy6 + 139579200*cy2*cy7 - 18208800*cy2*cy8 + 1123200*cy2*cy9 - 2041459200*cy3*cy3 + 3572553600*cy3*cy4 - 1970438400*cy3*cy5 + 676771200*cy3*cy6 - 137548800*cy3*cy7 + 14839200*cy3*cy8 - 676800*cy3*cy9 - 1447891200*cy4*cy4 + 1447891200*cy4*cy5 - 436060800*cy4*cy6 + 73483200*cy4*cy7 - 5896800*cy4*cy8 + 151200*cy4*cy9 - 317520000*cy5*cy5 + 158760000*cy5*cy6 - 19958400*cy5*cy7 + 907200*cy5*cy8 - 14817600*cy6*cy6 + 2116800*cy6*cy7,
    1856400*cx0*cx0 - 25989600*cx0*cx1 + 16800*cx0*cx10 + 79934400*cx0*cx2 - 141741600*cx0*cx3 + 159759600*cx0*cx4 - 118918800*cx0*cx5 + 58766400*cx0*cx6 - 18849600*cx0*cx7 + 3704400*cx0*cx8 - 394800*cx0*cx9 + 88998000*cx1*cx1 - 67200*cx1*cx10 - 533988000*cx1*cx2 + 920119200*cx1*cx3 - 1003002000*cx1*cx4 + 717670800*cx1*cx5 - 338184000*cx1*cx6 + 102312000*cx1*cx7 - 18673200*cx1*cx8 + 1806000*cx1*cx9 + 100800*cx10*cx2 - 67200*cx10*cx3 + 16800*cx10*cx4 + 778377600*cx2*cx2 - 2594592000*cx2*cx3 + 2719332000*cx2*cx4 - 1856131200*cx2*cx5 + 825552000*cx2*cx6 - 232243200*cx2*cx7 + 38556000*cx2*cx8 - 3276000*cx2*cx9 + 2079000000*cx3*cx3 - 4158000000*cx3*cx4 + 2679868800*cx3*cx5 - 1109203200*cx3*cx6 + 284256000*cx3*cx7 - 41580000*cx3*cx8 + 2940000*cx3*cx9 + 1963332000*cx4*cx4 - 2355998400*cx4*cx5 + 889056000*cx4*cx6 - 201096000*cx4*cx7 + 24570000*cx4*cx8 - 1302000*cx4*cx9 + 644565600*cx5*cx5 - 429710400*cx5*cx6 + 81345600*cx5*cx7 - 7484400*cx5*cx8 + 226800*cx5*cx9 + 59976000*cx6*cx6 - 17136000*cx6*cx7 + 907200*cx6*cx8 + 705600*cx7*cx7 + 1856400*cy0*cy0 - 25989600*cy0*cy1 + 16800*cy0*cy10 + 79934400*cy0*cy2 - 141741600*cy0*cy3 + 159759600*cy0*cy4 - 118918800*cy0*cy5 + 58766400*cy0*cy6 - 18849600*cy0*cy7 + 3704400*cy0*cy8 - 394800*cy0*cy9 + 88998000*cy1*cy1 - 67200*cy1*cy10 - 533988000*cy1*cy2 + 920119200*cy1*cy3 - 1003002000*cy1*cy4 + 717670800*cy1*cy5 - 338184000*cy1*cy6 + 102312000*cy1*cy7 - 18673200*cy1*cy8 + 1806000*cy1*cy9 + 100800*cy10*cy2 - 67200*cy10*cy3 + 16800*cy10*cy4 + 778377600*cy2*cy2 - 2594592000*cy2*cy3 + 2719332000*cy2*cy4 - 1856131200*cy2*cy5 + 825552000*cy2*cy6 - 232243200*cy2*cy7 + 38556000*cy2*cy8 - 3276000*cy2*cy9 + 2079000000*cy3*cy3 - 4158000000*cy3*cy4 + 2679868800*cy3*cy5 - 1109203200*cy3*cy6 + 284256000*cy3*cy7 - 41580000*cy3*cy8 + 2940000*cy3*cy9 + 1963332000*cy4*cy4 - 2355998400*cy4*cy5 + 889056000*cy4*cy6 - 201096000*cy4*cy7 + 24570000*cy4*cy8 - 1302000*cy4*cy9 + 644565600*cy5*cy5 - 429710400*cy5*cy6 + 81345600*cy5*cy7 - 7484400*cy5*cy8 + 226800*cy5*cy9 + 59976000*cy6*cy6 - 17136000*cy6*cy7 + 907200*cy6*cy8 + 705600*cy7*cy7,
    -856800*cx0*cx0 + 12852000*cx0*cx1 - 25200*cx0*cx10 - 42588000*cx0*cx2 + 81900000*cx0*cx3 - 100900800*cx0*cx4 + 82882800*cx0*cx5 - 45738000*cx0*cx6 + 16632000*cx0*cx7 - 3780000*cx0*cx8 + 478800*cx0*cx9 - 47376000*cx1*cx1 + 126000*cx1*cx10 + 307944000*cx1*cx2 - 579196800*cx1*cx3 + 695494800*cx1*cx4 - 554400000*cx1*cx5 + 295218000*cx1*cx6 - 102816000*cx1*cx7 + 22150800*cx1*cx8 - 2620800*cx1*cx9 - 252000*cx10*cx2 + 252000*cx10*cx3 - 126000*cx10*cx4 + 25200*cx10*cx5 - 489434400*cx2*cx2 + 1794592800*cx2*cx3 - 2091474000*cx2*cx4 + 1609146000*cx2*cx5 - 821016000*cx2*cx6 + 271252800*cx2*cx7 - 54658800*cx2*cx8 + 5922000*cx2*cx9 - 1596672000*cx3*cx3 + 3592512000*cx3*cx4 - 2649024000*cx3*cx5 + 1282780800*cx3*cx6 - 396748800*cx3*cx7 + 73332000*cx3*cx8 - 7056000*cx3*cx9 - 1936872000*cx4*cx4 + 2711620800*cx4*cx5 - 1229860800*cx4*cx6 + 349272000*cx4*cx7 - 57456000*cx4*cx8 + 4662000*cx4*cx9 - 889056000*cx5*cx5 + 740880000*cx5*cx6 - 187488000*cx5*cx7 + 26082000*cx5*cx8 - 1612800*cx5*cx9 - 137592000*cx6*cx6 + 58968000*cx6*cx7 - 6274800*cx6*cx8 + 226800*cx6*cx9 - 4838400*cx7*cx7 + 604800*cx7*cx8 - 856800*cy0*cy0 + 12852000*cy0*cy1 - 25200*cy0*cy10 - 42588000*cy0*cy2 + 81900000*cy0*cy3 - 100900800*cy0*cy4 + 82882800*cy0*cy5 - 45738000*cy0*cy6 + 16632000*cy0*cy7 - 3780000*cy0*cy8 + 478800*cy0*cy9 - 47376000*cy1*cy1 + 126000*cy1*cy10 + 307944000*cy1*cy2 - 579196800*cy1*cy3 + 695494800*cy1*cy4 - 554400000*cy1*cy5 + 295218000*cy1*cy6 - 102816000*cy1*cy7 + 22150800*cy1*cy8 - 2620800*cy1*cy9 - 252000*cy10*cy2 + 252000*cy10*cy3 - 126000*cy10*cy4 + 25200*cy10*cy5 - 489434400*cy2*cy2 + 1794592800*cy2*cy3 - 2091474000*cy2*cy4 + 1609146000*cy2*cy5 - 821016000*cy2*cy6 + 271252800*cy2*cy7 - 54658800*cy2*cy8 + 5922000*cy2*cy9 - 1596672000*cy3*cy3 + 3592512000*cy3*cy4 - 2649024000*cy3*cy5 + 1282780800*cy3*cy6 - 396748800*cy3*cy7 + 73332000*cy3*cy8 - 7056000*cy3*cy9 - 1936872000*cy4*cy4 + 2711620800*cy4*cy5 - 1229860800*cy4*cy6 + 349272000*cy4*cy7 - 57456000*cy4*cy8 + 4662000*cy4*cy9 - 889056000*cy5*cy5 + 740880000*cy5*cy6 - 187488000*cy5*cy7 + 26082000*cy5*cy8 - 1612800*cy5*cy9 - 137592000*cy6*cy6 + 58968000*cy6*cy7 - 6274800*cy6*cy8 + 226800*cy6*cy9 - 4838400*cy7*cy7 + 604800*cy7*cy8,
    306000*cx0*cx0 - 4896000*cx0*cx1 + 25200*cx0*cx10 + 17388000*cx0*cx2 - 36036000*cx0*cx3 + 48157200*cx0*cx4 - 43243200*cx0*cx5 + 26334000*cx0*cx6 - 10692000*cx0*cx7 + 2754000*cx0*cx8 - 403200*cx0*cx9 + 19332000*cx1*cx1 - 151200*cx1*cx10 - 135324000*cx1*cx2 + 275839200*cx1*cx3 - 361670400*cx1*cx4 + 317671200*cx1*cx5 - 188496000*cx1*cx6 + 74196000*cx1*cx7 - 18403200*cx1*cx8 + 2570400*cx1*cx9 + 378000*cx10*cx2 - 504000*cx10*cx3 + 378000*cx10*cx4 - 151200*cx10*cx5 + 25200*cx10*cx6 + 232923600*cx2*cx2 - 931694400*cx2*cx3 + 1195009200*cx2*cx4 - 1022868000*cx2*cx5 + 588546000*cx2*cx6 - 223171200*cx2*cx7 + 52844400*cx2*cx8 - 6955200*cx2*cx9 + 911433600*cx3*cx3 - 2278584000*cx3*cx4 + 1891512000*cx3*cx5 - 1048723200*cx3*cx6 + 379814400*cx3*cx7 - 84823200*cx3*cx8 + 10332000*cx3*cx9 + 1381212000*cx4*cx4 - 2209939200*cx4*cx5 + 1170590400*cx4*cx6 - 400075200*cx4*cx7 + 82782000*cx4*cx8 - 9072000*cx4*cx9 + 844603200*cx5*cx5 - 844603200*cx5*cx6 + 267624000*cx5*cx7 - 49896000*cx5*cx8 + 4687200*cx5*cx9 + 195804000*cx6*cx6 - 111888000*cx6*cx7 + 17917200*cx6*cx8 - 1310400*cx6*cx9 + 13737600*cx7*cx7 - 3434400*cx7*cx8 + 151200*cx7*cx9 + 129600*cx8*cx8 + 306000*cy0*cy0 - 4896000*cy0*cy1 + 25200*cy0*cy10 + 17388000*cy0*cy2 - 36036000*cy0*cy3 + 48157200*cy0*cy4 - 43243200*cy0*cy5 + 26334000*cy0*cy6 - 10692000*cy0*cy7 + 2754000*cy0*cy8 - 403200*cy0*cy9 + 19332000*cy1*cy1 - 151200*cy1*cy10 - 135324000*cy1*cy2 + 275839200*cy1*cy3 - 361670400*cy1*cy4 + 317671200*cy1*cy5 - 188496000*cy1*cy6 + 74196000*cy1*cy7 - 18403200*cy1*cy8 + 2570400*cy1*cy9 + 378000*cy10*cy2 - 504000*cy10*cy3 + 378000*cy10*cy4 - 151200*cy10*cy5 + 25200*cy10*cy6 + 232923600*cy2*cy2 - 931694400*cy2*cy3 + 1195009200*cy2*cy4 - 1022868000*cy2*cy5 + 588546000*cy2*cy6 - 223171200*cy2*cy7 + 52844400*cy2*cy8 - 6955200*cy2*cy9 + 911433600*cy3*cy3 - 2278584000*cy3*cy4 + 1891512000*cy3*cy5 - 1048723200*cy3*cy6 + 379814400*cy3*cy7 - 84823200*cy3*cy8 + 10332000*cy3*cy9 + 1381212000*cy4*cy4 - 2209939200*cy4*cy5 + 1170590400*cy4*cy6 - 400075200*cy4*cy7 + 82782000*cy4*cy8 - 9072000*cy4*cy9 + 844603200*cy5*cy5 - 844603200*cy5*cy6 + 267624000*cy5*cy7 - 49896000*cy5*cy8 + 4687200*cy5*cy9 + 195804000*cy6*cy6 - 111888000*cy6*cy7 + 17917200*cy6*cy8 - 1310400*cy6*cy9 + 13737600*cy7*cy7 - 3434400*cy7*cy8 + 151200*cy7*cy9 + 129600*cy8*cy8,
    -81600*cx0*cx0 + 1387200*cx0*cx1 - 16800*cx0*cx10 - 5256000*cx0*cx2 + 11676000*cx0*cx3 - 16816800*cx0*cx4 + 16380000*cx0*cx5 - 10903200*cx0*cx6 + 4884000*cx0*cx7 - 1404000*cx0*cx8 + 232800*cx0*cx9 - 5841600*cx1*cx1 + 117600*cx1*cx10 + 43812000*cx1*cx2 - 96196800*cx1*cx3 + 136718400*cx1*cx4 - 131140800*cx1*cx5 + 85747200*cx1*cx6 - 37608000*cx1*cx7 + 10540800*cx1*cx8 - 1694400*cx1*cx9 - 352800*cx10*cx2 + 588000*cx10*cx3 - 588000*cx10*cx4 + 352800*cx10*cx5 - 117600*cx10*cx6 + 16800*cx10*cx7 - 81194400*cx2*cx2 + 351842400*cx2*cx3 - 492458400*cx2*cx4 + 464032800*cx2*cx5 - 297108000*cx2*cx6 + 127072800*cx2*cx7 - 34538400*cx2*cx8 + 5342400*cx2*cx9 - 375379200*cx3*cx3 + 1032292800*cx3*cx4 - 952560000*cx3*cx5 + 594820800*cx3*cx6 - 246758400*cx3*cx7 + 64562400*cx3*cx8 - 9508800*cx3*cx9 - 695016000*cx4*cx4 + 1251028800*cx4*cx5 - 757814400*cx4*cx6 + 302702400*cx4*cx7 - 75448800*cx4*cx8 + 10416000*cx4*cx9 - 546134400*cx5*cx5 + 637156800*cx5*cx6 - 242524800*cx5*cx7 + 56700000*cx5*cx8 - 7156800*cx5*cx9 - 177105600*cx6*cx6 + 126504000*cx6*cx7 - 27064800*cx6*cx8 + 2990400*cx6*cx9 - 20678400*cx7*cx7 + 7754400*cx7*cx8 - 686400*cx7*cx9 - 583200*cx8*cx8 + 64800*cx8*cx9 - 81600*cy0*cy0 + 1387200*cy0*cy1 - 16800*cy0*cy10 - 5256000*cy0*cy2 + 11676000*cy0*cy3 - 16816800*cy0*cy4 + 16380000*cy0*cy5 - 10903200*cy0*cy6 + 4884000*cy0*cy7 - 1404000*cy0*cy8 + 232800*cy0*cy9 - 5841600*cy1*cy1 + 117600*cy1*cy10 + 43812000*cy1*cy2 - 96196800*cy1*cy3 + 136718400*cy1*cy4 - 131140800*cy1*cy5 + 85747200*cy1*cy6 - 37608000*cy1*cy7 + 10540800*cy1*cy8 - 1694400*cy1*cy9 - 352800*cy10*cy2 + 588000*cy10*cy3 - 588000*cy10*cy4 + 352800*cy10*cy5 - 117600*cy10*cy6 + 16800*cy10*cy7 - 81194400*cy2*cy2 + 351842400*cy2*cy3 - 492458400*cy2*cy4 + 464032800*cy2*cy5 - 297108000*cy2*cy6 + 127072800*cy2*cy7 - 34538400*cy2*cy8 + 5342400*cy2*cy9 - 375379200*cy3*cy3 + 1032292800*cy3*cy4 - 952560000*cy3*cy5 + 594820800*cy3*cy6 - 246758400*cy3*cy7 + 64562400*cy3*cy8 - 9508800*cy3*cy9 - 695016000*cy4*cy4 + 1251028800*cy4*cy5 - 757814400*cy4*cy6 + 302702400*cy4*cy7 - 75448800*cy4*cy8 + 10416000*cy4*cy9 - 546134400*cy5*cy5 + 637156800*cy5*cy6 - 242524800*cy5*cy7 + 56700000*cy5*cy8 - 7156800*cy5*cy9 - 177105600*cy6*cy6 + 126504000*cy6*cy7 - 27064800*cy6*cy8 + 2990400*cy6*cy9 - 20678400*cy7*cy7 + 7754400*cy7*cy8 - 686400*cy7*cy9 - 583200*cy8*cy8 + 64800*cy8*cy9,
    15300*cx0*cx0 - 275400*cx0*cx1 + 7200*cx0*cx10 + 1108800*cx0*cx2 - 2628000*cx0*cx3 + 4057200*cx0*cx4 - 4258800*cx0*cx5 + 3074400*cx0*cx6 - 1504800*cx0*cx7 + 477000*cx0*cx8 - 88200*cx0*cx9 + 1232100*cx1*cx1 - 57600*cx1*cx10 - 9856800*cx1*cx2 + 23191200*cx1*cx3 - 35506800*cx1*cx4 + 36918000*cx1*cx5 - 26359200*cx1*cx6 + 12736800*cx1*cx7 - 3976200*cx1*cx8 + 721800*cx1*cx9 + 201600*cx10*cx2 - 403200*cx10*cx3 + 504000*cx10*cx4 - 403200*cx10*cx5 + 201600*cx10*cx6 - 57600*cx10*cx7 + 7200*cx10*cx8 + 19569600*cx2*cx2 - 91324800*cx2*cx3 + 138499200*cx2*cx4 - 142430400*cx2*cx5 + 100396800*cx2*cx6 - 47779200*cx2*cx7 + 14644800*cx2*cx8 - 2599200*cx2*cx9 + 105537600*cx3*cx3 - 316612800*cx3*cx4 + 321451200*cx3*cx5 - 223171200*cx3*cx6 + 104284800*cx3*cx7 - 31255200*cx3*cx8 + 5392800*cx3*cx9 + 234435600*cx4*cx4 - 468871200*cx4*cx5 + 319636800*cx4*cx6 - 146059200*cx4*cx7 + 42562800*cx4*cx8 - 7081200*cx4*cx9 + 230202000*cx5*cx5 - 306936000*cx5*cx6 + 136382400*cx5*cx7 - 38329200*cx5*cx8 + 6073200*cx5*cx9 + 99489600*cx6*cx6 - 85276800*cx6*cx7 + 22831200*cx6*cx8 - 3376800*cx6*cx9 + 17409600*cx7*cx7 - 8704800*cx7*cx8 + 1159200*cx7*cx9 + 980100*cx8*cx8 - 217800*cx8*cx9 + 8100*cx9*cx9 + 15300*cy0*cy0 - 275400*cy0*cy1 + 7200*cy0*cy10 + 1108800*cy0*cy2 - 2628000*cy0*cy3 + 4057200*cy0*cy4 - 4258800*cy0*cy5 + 3074400*cy0*cy6 - 1504800*cy0*cy7 + 477000*cy0*cy8 - 88200*cy0*cy9 + 1232100*cy1*cy1 - 57600*cy1*cy10 - 9856800*cy1*cy2 + 23191200*cy1*cy3 - 35506800*cy1*cy4 + 36918000*cy1*cy5 - 26359200*cy1*cy6 + 12736800*cy1*cy7 - 3976200*cy1*cy8 + 721800*cy1*cy9 + 201600*cy10*cy2 - 403200*cy10*cy3 + 504000*cy10*cy4 - 403200*cy10*cy5 + 201600*cy10*cy6 - 57600*cy10*cy7 + 7200*cy10*cy8 + 19569600*cy2*cy2 - 91324800*cy2*cy3 + 138499200*cy2*cy4 - 142430400*cy2*cy5 + 100396800*cy2*cy6 - 47779200*cy2*cy7 + 14644800*cy2*cy8 - 2599200*cy2*cy9 + 105537600*cy3*cy3 - 316612800*cy3*cy4 + 321451200*cy3*cy5 - 223171200*cy3*cy6 + 104284800*cy3*cy7 - 31255200*cy3*cy8 + 5392800*cy3*cy9 + 234435600*cy4*cy4 - 468871200*cy4*cy5 + 319636800*cy4*cy6 - 146059200*cy4*cy7 + 42562800*cy4*cy8 - 7081200*cy4*cy9 + 230202000*cy5*cy5 - 306936000*cy5*cy6 + 136382400*cy5*cy7 - 38329200*cy5*cy8 + 6073200*cy5*cy9 + 99489600*cy6*cy6 - 85276800*cy6*cy7 + 22831200*cy6*cy8 - 3376800*cy6*cy9 + 17409600*cy7*cy7 - 8704800*cy7*cy8 + 1159200*cy7*cy9 + 980100*cy8*cy8 - 217800*cy8*cy9 + 8100*cy9*cy9,
    -1800*cx0*cx0 + 34200*cx0*cx1 - 1800*cx0*cx10 - 145800*cx0*cx2 + 367200*cx0*cx3 - 604800*cx0*cx4 + 680400*cx0*cx5 - 529200*cx0*cx6 + 280800*cx0*cx7 - 97200*cx0*cx8 + 19800*cx0*cx9 - 162000*cx1*cx1 + 16200*cx1*cx10 + 1377000*cx1*cx2 - 3456000*cx1*cx3 + 5670000*cx1*cx4 - 6350400*cx1*cx5 + 4914000*cx1*cx6 - 2592000*cx1*cx7 + 891000*cx1*cx8 - 180000*cx1*cx9 - 64800*cx10*cx2 + 151200*cx10*cx3 - 226800*cx10*cx4 + 226800*cx10*cx5 - 151200*cx10*cx6 + 64800*cx10*cx7 - 16200*cx10*cx8 + 1800*cx10*cx9 - 2916000*cx2*cx2 + 14580000*cx2*cx3 - 23814000*cx2*cx4 + 26535600*cx2*cx5 - 20412000*cx2*cx6 + 10692000*cx2*cx7 - 3645000*cx2*cx8 + 729000*cx2*cx9 - 18144000*cx3*cx3 + 58968000*cx3*cx4 - 65318400*cx3*cx5 + 49896000*cx3*cx6 - 25920000*cx3*cx7 + 8748000*cx3*cx8 - 1728000*cx3*cx9 - 47628000*cx4*cx4 + 104781600*cx4*cx5 - 79380000*cx4*cx6 + 40824000*cx4*cx7 - 13608000*cx4*cx8 + 2646000*cx4*cx9 - 57153600*cx5*cx5 + 85730400*cx5*cx6 - 43545600*cx5*cx7 + 14288400*cx5*cx8 - 2721600*cx5*cx9 - 31752000*cx6*cx6 + 31752000*cx6*cx7 - 10206000*cx6*cx8 + 1890000*cx6*cx9 - 7776000*cx7*cx7 + 4860000*cx7*cx8 - 864000*cx7*cx9 - 729000*cx8*cx8 + 243000*cx8*cx9 - 18000*cx9*cx9 - 1800*cy0*cy0 + 34200*cy0*cy1 - 1800*cy0*cy10 - 145800*cy0*cy2 + 367200*cy0*cy3 - 604800*cy0*cy4 + 680400*cy0*cy5 - 529200*cy0*cy6 + 280800*cy0*cy7 - 97200*cy0*cy8 + 19800*cy0*cy9 - 162000*cy1*cy1 + 16200*cy1*cy10 + 1377000*cy1*cy2 - 3456000*cy1*cy3 + 5670000*cy1*cy4 - 6350400*cy1*cy5 + 4914000*cy1*cy6 - 2592000*cy1*cy7 + 891000*cy1*cy8 - 180000*cy1*cy9 - 64800*cy10*cy2 + 151200*cy10*cy3 - 226800*cy10*cy4 + 226800*cy10*cy5 - 151200*cy10*cy6 + 64800*cy10*cy7 - 16200*cy10*cy8 + 1800*cy10*cy9 - 2916000*cy2*cy2 + 14580000*cy2*cy3 - 23814000*cy2*cy4 + 26535600*cy2*cy5 - 20412000*cy2*cy6 + 10692000*cy2*cy7 - 3645000*cy2*cy8 + 729000*cy2*cy9 - 18144000*cy3*cy3 + 58968000*cy3*cy4 - 65318400*cy3*cy5 + 49896000*cy3*cy6 - 25920000*cy3*cy7 + 8748000*cy3*cy8 - 1728000*cy3*cy9 - 47628000*cy4*cy4 + 104781600*cy4*cy5 - 79380000*cy4*cy6 + 40824000*cy4*cy7 - 13608000*cy4*cy8 + 2646000*cy4*cy9 - 57153600*cy5*cy5 + 85730400*cy5*cy6 - 43545600*cy5*cy7 + 14288400*cy5*cy8 - 2721600*cy5*cy9 - 31752000*cy6*cy6 + 31752000*cy6*cy7 - 10206000*cy6*cy8 + 1890000*cy6*cy9 - 7776000*cy7*cy7 + 4860000*cy7*cy8 - 864000*cy7*cy9 - 729000*cy8*cy8 + 243000*cy8*cy9 - 18000*cy9*cy9,
    100*cx0*cx0 - 2000*cx0*cx1 + 200*cx0*cx10 + 9000*cx0*cx2 - 24000*cx0*cx3 + 42000*cx0*cx4 - 50400*cx0*cx5 + 42000*cx0*cx6 - 24000*cx0*cx7 + 9000*cx0*cx8 - 2000*cx0*cx9 + 10000*cx1*cx1 - 2000*cx1*cx10 - 90000*cx1*cx2 + 240000*cx1*cx3 - 420000*cx1*cx4 + 504000*cx1*cx5 - 420000*cx1*cx6 + 240000*cx1*cx7 - 90000*cx1*cx8 + 20000*cx1*cx9 + 100*cx10*cx10 + 9000*cx10*cx2 - 24000*cx10*cx3 + 42000*cx10*cx4 - 50400*cx10*cx5 + 42000*cx10*cx6 - 24000*cx10*cx7 + 9000*cx10*cx8 - 2000*cx10*cx9 + 202500*cx2*cx2 - 1080000*cx2*cx3 + 1890000*cx2*cx4 - 2268000*cx2*cx5 + 1890000*cx2*cx6 - 1080000*cx2*cx7 + 405000*cx2*cx8 - 90000*cx2*cx9 + 1440000*cx3*cx3 - 5040000*cx3*cx4 + 6048000*cx3*cx5 - 5040000*cx3*cx6 + 2880000*cx3*cx7 - 1080000*cx3*cx8 + 240000*cx3*cx9 + 4410000*cx4*cx4 - 10584000*cx4*cx5 + 8820000*cx4*cx6 - 5040000*cx4*cx7 + 1890000*cx4*cx8 - 420000*cx4*cx9 + 6350400*cx5*cx5 - 10584000*cx5*cx6 + 6048000*cx5*cx7 - 2268000*cx5*cx8 + 504000*cx5*cx9 + 4410000*cx6*cx6 - 5040000*cx6*cx7 + 1890000*cx6*cx8 - 420000*cx6*cx9 + 1440000*cx7*cx7 - 1080000*cx7*cx8 + 240000*cx7*cx9 + 202500*cx8*cx8 - 90000*cx8*cx9 + 10000*cx9*cx9 + 100*cy0*cy0 - 2000*cy0*cy1 + 200*cy0*cy10 + 9000*cy0*cy2 - 24000*cy0*cy3 + 42000*cy0*cy4 - 50400*cy0*cy5 + 42000*cy0*cy6 - 24000*cy0*cy7 + 9000*cy0*cy8 - 2000*cy0*cy9 + 10000*cy1*cy1 - 2000*cy1*cy10 - 90000*cy1*cy2 + 240000*cy1*cy3 - 420000*cy1*cy4 + 504000*cy1*cy5 - 420000*cy1*cy6 + 240000*cy1*cy7 - 90000*cy1*cy8 + 20000*cy1*cy9 + 100*cy10*cy10 + 9000*cy10*cy2 - 24000*cy10*cy3 + 42000*cy10*cy4 - 50400*cy10*cy5 + 42000*cy10*cy6 - 24000*cy10*cy7 + 9000*cy10*cy8 - 2000*cy10*cy9 + 202500*cy2*cy2 - 1080000*cy2*cy3 + 1890000*cy2*cy4 - 2268000*cy2*cy5 + 1890000*cy2*cy6 - 1080000*cy2*cy7 + 405000*cy2*cy8 - 90000*cy2*cy9 + 1440000*cy3*cy3 - 5040000*cy3*cy4 + 6048000*cy3*cy5 - 5040000*cy3*cy6 + 2880000*cy3*cy7 - 1080000*cy3*cy8 + 240000*cy3*cy9 + 4410000*cy4*cy4 - 10584000*cy4*cy5 + 8820000*cy4*cy6 - 5040000*cy4*cy7 + 1890000*cy4*cy8 - 420000*cy4*cy9 + 6350400*cy5*cy5 - 10584000*cy5*cy6 + 6048000*cy5*cy7 - 2268000*cy5*cy8 + 504000*cy5*cy9 + 4410000*cy6*cy6 - 5040000*cy6*cy7 + 1890000*cy6*cy8 - 420000*cy6*cy9 + 1440000*cy7*cy7 - 1080000*cy7*cy8 + 240000*cy7*cy9 + 202500*cy8*cy8 - 90000*cy8*cy9 + 10000*cy9*cy9
    },
    result, t0, t1, tol);

    return result;
}


template<typename Derived>
std::vector<typename Derived::Scalar> compute_Bezier_singularities(
        const Eigen::PlainObjectBase<Derived>& ctrl_pts,
        typename Derived::Scalar t0 = 0,
        typename Derived::Scalar t1 = 1) {
    switch(ctrl_pts.rows()-1) {
        case 2:
            return compute_Bezier_degree_2_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), t0, t1);
        case 3:
            return compute_Bezier_degree_3_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), t0, t1);
        case 4:
            return compute_Bezier_degree_4_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), ctrl_pts(4,0), ctrl_pts(4,1), t0, t1);
        #ifdef HIGH_DEGREE_SUPPORT
        case 5:
            return compute_Bezier_degree_5_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), ctrl_pts(4,0), ctrl_pts(4,1), ctrl_pts(5,0), ctrl_pts(5,1), t0, t1);
        #endif // HIGH_DEGREE_SUPPORT
        #ifdef HIGH_DEGREE_SUPPORT
        case 6:
            return compute_Bezier_degree_6_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), ctrl_pts(4,0), ctrl_pts(4,1), ctrl_pts(5,0), ctrl_pts(5,1), ctrl_pts(6,0), ctrl_pts(6,1), t0, t1);
        #endif // HIGH_DEGREE_SUPPORT
        #ifdef HIGH_DEGREE_SUPPORT
        case 7:
            return compute_Bezier_degree_7_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), ctrl_pts(4,0), ctrl_pts(4,1), ctrl_pts(5,0), ctrl_pts(5,1), ctrl_pts(6,0), ctrl_pts(6,1), ctrl_pts(7,0), ctrl_pts(7,1), t0, t1);
        #endif // HIGH_DEGREE_SUPPORT
        #ifdef HIGH_DEGREE_SUPPORT
        case 8:
            return compute_Bezier_degree_8_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), ctrl_pts(4,0), ctrl_pts(4,1), ctrl_pts(5,0), ctrl_pts(5,1), ctrl_pts(6,0), ctrl_pts(6,1), ctrl_pts(7,0), ctrl_pts(7,1), ctrl_pts(8,0), ctrl_pts(8,1), t0, t1);
        #endif // HIGH_DEGREE_SUPPORT
        #ifdef HIGH_DEGREE_SUPPORT
        case 9:
            return compute_Bezier_degree_9_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), ctrl_pts(4,0), ctrl_pts(4,1), ctrl_pts(5,0), ctrl_pts(5,1), ctrl_pts(6,0), ctrl_pts(6,1), ctrl_pts(7,0), ctrl_pts(7,1), ctrl_pts(8,0), ctrl_pts(8,1), ctrl_pts(9,0), ctrl_pts(9,1), t0, t1);
        #endif // HIGH_DEGREE_SUPPORT
        #ifdef HIGH_DEGREE_SUPPORT
        case 10:
            return compute_Bezier_degree_10_singularities(ctrl_pts(0,0), ctrl_pts(0,1), ctrl_pts(1,0), ctrl_pts(1,1), ctrl_pts(2,0), ctrl_pts(2,1), ctrl_pts(3,0), ctrl_pts(3,1), ctrl_pts(4,0), ctrl_pts(4,1), ctrl_pts(5,0), ctrl_pts(5,1), ctrl_pts(6,0), ctrl_pts(6,1), ctrl_pts(7,0), ctrl_pts(7,1), ctrl_pts(8,0), ctrl_pts(8,1), ctrl_pts(9,0), ctrl_pts(9,1), ctrl_pts(10,0), ctrl_pts(10,1), t0, t1);
        #endif // HIGH_DEGREE_SUPPORT
        default:
            throw not_implemented_error(
                "Singularity computation only works on Bezier curve with degree lower than 10");
    }
}



} // End internal namespace
} // End nanospline namespace

